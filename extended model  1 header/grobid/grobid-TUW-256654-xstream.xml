<Publication>
  <id>TUW-256654</id>
  <title></title>
  <note>Sections M. Anton Ertl *</note>
  <abstractText>A section is a contiguous region of memory, to which data or code can be appended (like the Forth dictionary). Assembly languages and linkers have supported multiple sections for a long time. This paper describes the benefits of supporting multiple sections in Forth, interfaces and implementation techniques. â€¢ You put B in allocated memory. Unfortunately , that usually means that B does not survive a savesystem, and it&apos;s also cumbersome if B is a growable structure.</abstractText>
  <keywords/>
  <authors>
    <Author>
      <firstNames>
        <string>T</string>
        <string>U</string>
      </firstNames>
      <lastName>Wien</lastName>
      <affiliations/>
    </Author>
  </authors>
  <affiliations/>
  <sections>
    <Section>
      <level>1</level>
      <title>Introduction</title>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <level>2</level>
      <title>Uses</title>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <level>2.1</level>
      <title>Nested structures</title>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <level>2.3</level>
      <title>Further uses</title>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <level>3</level>
      <title>Progamming interface</title>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <level>2.2</level>
      <title>Separate code and data</title>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <title>References</title>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <level>5</level>
      <title>Conclusion</title>
      <referenceIds/>
      <referenceCitations/>
    </Section>
  </sections>
  <citationContexts/>
  <references/>
</Publication>