<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 C:\Users\Angela\git\grobid\grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.5-dummy" ident="GROBID" when="2017-12-29T00:16+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">On the Complexity of Some Colorful Problems Parameterized by Treewidth</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Michael</forename><surname>Fellows</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">University of Newcastle</orgName>
								<address>
									<settlement>Newcastle</settlement>
									<country key="AU">Australia</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Fedor</forename><forename type="middle">V</forename><surname>Fomin</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">Department of Informatics</orgName>
								<orgName type="institution">University of Bergen</orgName>
								<address>
									<settlement>Bergen</settlement>
									<country key="NO">Norway</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Daniel</forename><surname>Lokshtanov</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">Department of Informatics</orgName>
								<orgName type="institution">University of Bergen</orgName>
								<address>
									<settlement>Bergen</settlement>
									<country key="NO">Norway</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Frances</forename><surname>Rosamond</surname></persName>
							<affiliation key="aff0">
								<orgName type="institution">University of Newcastle</orgName>
								<address>
									<settlement>Newcastle</settlement>
									<country key="AU">Australia</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Saket</forename><surname>Saurabh</surname></persName>
							<affiliation key="aff1">
								<orgName type="department">Department of Informatics</orgName>
								<orgName type="institution">University of Bergen</orgName>
								<address>
									<settlement>Bergen</settlement>
									<country key="NO">Norway</country>
								</address>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="department">Institute of Mathematical Sciences</orgName>
								<address>
									<region>Chennai</region>
									<country key="IN">India</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Stefan</forename><surname>Szeider</surname></persName>
							<email>stefan.szeider@durham.ac.uk</email>
							<affiliation key="aff3">
								<orgName type="department">Department of Computer Science</orgName>
								<orgName type="institution">Durham University</orgName>
								<address>
									<settlement>Durham</settlement>
									<country key="GB">U.K</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Carsten</forename><surname>Thomassen</surname></persName>
							<email>C.Thomassen@mat.dtu.dk</email>
							<affiliation key="aff4">
								<orgName type="department">Mathematics Institute</orgName>
								<orgName type="institution">Danish Technical University</orgName>
								<address>
									<settlement>Lyngby</settlement>
									<country key="DK">Denmark</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">On the Complexity of Some Colorful Problems Parameterized by Treewidth</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Topics: Parameterized Complexity</term>
					<term>Bounded Treewidth</term>
					<term>Graph Coloring</term>
				</keywords>
			</textClass>
			<abstract>
				<p>We study the complexity of several coloring problems on graphs, pa-rameterized by the treewidth t of the graph: (1) The list chromatic number χl(G) of a graph G is defined to be the smallest positive integer r, such that for every assignment to the vertices v of G, of a list Lv of colors, where each list has length at least r, there is a choice of one color from each vertex list Lv yielding a proper coloring of G. We show that the problem of determining whether χl(G) ≤ r, the LIST CHROMATIC NUMBER problem, is solvable in linear time for every fixed treewidth bound t. The method by which this is shown is new and of general applicability. (2) The LIST COLORING problem takes as input a graph G, together with an assignment to each vertex v of a set of colors Cv. The problem is to determine whether it is possible to choose a color for vertex v from the set of permitted colors Cv, for each vertex, so that the obtained coloring of G is proper. We show that this problem is W [1]-hard, parameterized by the treewidth of G. The closely related PRECOLORING EXTENSION problem is also shown to be W [1]-hard, pa-rameterized by treewidth. (3) An equitable coloring of a graph G is a proper coloring of the vertices where the numbers of vertices having any two distinct colors differs by at most one. We show that the problem is hard for W [1], parameterized by (t, r). We also show that a list-based variation, LIST EQUITABLE COLORING is W [1]-hard for trees, parameterized by the number of colors on the lists.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">Introduction</head><p>Coloring problems that involve local and global restrictions on the coloring have many important applications in such areas as operations research, scheduling and computa- tional biology, and also have a long mathematical history. For recent surveys of the area one can turn to [Tu97,KTV98,Al00,Wo01] and also the book <ref type="bibr">[JT95]</ref>. In this pa- per we study the computational complexity of such problems, for graphs of bounded treewidth, in the framework of parameterized complexity <ref type="bibr">[DF99,Nie06]</ref>, where we take the parameter to be the treewidth bound t.</p><p>Our main results are summarized:</p><p>-We show that the list chromatic number (also known as the choice number <ref type="bibr">[KTV98]</ref>) of a graph can be computed in linear time for any fixed treewidth bound t. (We prove this using a new "trick" for extending the applicability of Monadic Second Order logic that is of general interest.) -We show that LIST COLORING and PRECOLORING EXTENSION are W <ref type="bibr">[1]</ref>-hard for parameter t. -We show that EQUITABLE COLORING is W <ref type="bibr">[1]</ref>-hard parameterized by t.</p><p>The problems are defined as follows.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>LIST CHROMATIC NUMBER</head><p>Input: A graph G = (V, E) of treewidth at most t, and a positive integer r. Parameter: t Question: Is χ l (G) ≤ r?</p><p>LIST COLORING Input: A graph G = (V, E) of treewidth at most t, and for each vertex v ∈ V , a list L(v) of permitted colors. Parameter: t Question: Is there a proper vertex coloring c with c(v) ∈ L(v) for each v?</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>PRECOLORING EXTENSION</head><p>Input: A graph G = (V, E) of treewidth at most t, a subset W ⊆ V of precol- ored vertices, a precoloring c W of the vertices of W , and a positive integer r. Parameter: t Question: Is there a proper vertex coloring c of V which extends c W (that is, c(v) = c W (v) for all v ∈ W ), using at most r colors? EQUITABLE COLORING (ECP) Input: A graph G = (V, E) of treewidth at most t and a positive integer r. Parameter: t Question: Is there a proper vertex coloring c using at most r colors, with the property that the sizes of any two color classes differ by at most one?</p><p>Previous Results. LIST COLORING is NP-complete, even for very restricted classes of graphs, such as complete bipartite graphs <ref type="bibr">[JS97]</ref>. Jansen and Scheffler described a dynamic programming algorithm for the problem that runs in time O(n t+2 ) for graphs of treewidth at most t <ref type="bibr">[JS97]</ref>. PRECOLORING EXTENSION is NP-complete, and can also be solved in time O(n t+2 ) for graphs of treewidth at most t <ref type="bibr">[JS97]</ref>. The LIST CHROMATIC NUMBER problem is Π p 2 -complete for any fixed r ≥ 3, a result attributed to Gutner and Tarsi <ref type="bibr">[Tu97]</ref>. There does not appear to have been any previous result on the complexity of the L IST CHROMATIC NUMBER problem for graphs of bounded treewidth.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Some Background on Parameterized Complexity.</head><p>Parameterized complexity is basically a two-dimensional generalization of "P vs. NP" where in addition to the overall input size n, one studies the effects on compu- tational complexity of a secondary measurement that captures additional relevant in- formation. This additional information can be, for example, a structural restriction on the input distribution considered, such as a bound on the treewidth of an input graph. Parameterization can be deployed in many different ways; for general background on the theory see <ref type="bibr">[DF99,FG06,Nie06]</ref>.</p><p>The two-dimensional analogue (or generalization) of P, is solvability within a time bound of O(f(k)n c ), where n is the total input size, k is the parameter, f is some (usually computable) function, and c is a constant that does not depend on k or n. Pa- rameterized decision problems are defined by specifying the input, the parameter, and the question to be answered. A parameterized problem that can be solved in such time is termed fixed-parameter tractable (FPT). There is a hierarchy of intractable parame- terized problem classes above FPT, the main ones are:</p><formula xml:id="formula_0">F P T ⊆ M [1] ⊆ W [1] ⊆ M [2] ⊆ W [2] ⊆ · · · ⊆ W [P ] ⊆ XP</formula><p>The principal analogue of the classical intractability class NP is W <ref type="bibr">[1]</ref>, which is a strong analogue, because a fundamental problem complete for W <ref type="bibr">[1]</ref> is the k-STEP HALTING PROBLEM FOR NONDETERMINISTIC TURING MACHINES (with unlimited nondeter- minism and alphabet size) -this completeness result provides an analogue of Cook's Theorem in classical complexity. A convenient source of W [1]-hardness reductions is provided by the result that k-CLIQUE is complete for W <ref type="bibr">[1]</ref>. Other highlights of the the- ory include that k-DOMINATING SET, by contrast, is complete for W <ref type="bibr">[2]</ref>. F P T = M <ref type="bibr">[1]</ref> if and only if the Exponential Time Hypothesis fails. XP is the class of all problems that are solvable in time <ref type="bibr">O(n g(k)</ref> ). The principal "working algorithmics" way of showing that a parameterized problem is unlikely to be fixed-parameter tractable is to prove W [1]-hardness. The key property of a parameterized reduction between parameterized problems Π and Π is that the input (x, k) to Π should be transformed to input (x , k ) for Π , so that the receiving parameter k is a function only of the parameter k for the source problem.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.1">LIST CHROMATIC NUMBER Parameterized by Treewidth is FPT</head><p>The notion of the list chromatic number (also known as the choice number) of a graph was introduced by Vizing in 1976 <ref type="bibr">[Viz76]</ref>, and independently by Erdös, Rubin and Taylor in 1980 <ref type="bibr">[ERT80]</ref>. A celebrated result that gave impetus to the area was proved by Thomassen: every planar graph has list chromatic number at most five <ref type="bibr">[Th94]</ref>.</p><p>We describe an algorithm for the LIST CHROMATIC NUMBER problem that runs in linear time for any fixed treewidth bound t. Our algorithm employs the machinery of Monadic Second Order (MSO) logic, due to Courcelle <ref type="bibr">[Cou90]</ref> (also <ref type="bibr">[ALS91,BPT92]</ref>). At a glance, this may seem surprising, since there is no obvious way to describe the problem in MSO logic -one would seemingly have to quantify over all possible list assignments to the vertices of G, and the vocabulary of MSO seems not to provide any way to do this. We employ a "trick" that was first described (to our knowledge) in <ref type="bibr">[BFLRRW06]</ref>, with further applications described in <ref type="bibr">[CFRRRS07,FGKPRWY07]</ref>.</p><p>The essence of the trick is to construct an auxiliary graph that consists of the original input, augmented with additional semantic vertices, so that the whole ensemble has -or can safely be assumed to have -bounded treewidth, and relative to which the problem of interest can be expressed in MSO logic.</p><p>A list assignment L with |L(v)| ≥ r for all v ∈ V is termed an r-list assignment. A list assignment L from which G cannot be properly colored is called bad. Thus, a graph G does not have list chromatic number χ l (G) ≤ r, if and only if there is a bad r-list assignment for G.</p><p>The following lemma is crucial to the approach.</p><p>Lemma 1. If a graph of treewidth at most t admits any bad r-list assignment, then it admits a bad list assignment where the colors are drawn from a set of (2t + 1)r colors.</p><p>Proof. First of all, we may note that if G has treewidth bounded by t, then χ l (G) ≤ t+1 (and similarly, the chromatic number of G is at most t + 1). This follows easily from the inductive definition of t-trees. We can therefore assume that r ≤ t. Fix attention on a width t tree decomposition D for G, where the bags of the decom- position are indexed by the tree T . For a node t of T , let D(t) denote the bag associated to the node t. Suppose that L is a bad r-list assignment for G, and let C denote the union of the lists of L. For a color α ∈ C, let T α denote the subforest of T induced by the set of vertices t of T for which D(t) contains a vertex v of G, where the color α occurs in the list L(v). Let T (α) denote the set of trees of the forest T α . Let T denote the union of the sets T (α), taken over all of the colors α that occur in the list assignment L:</p><formula xml:id="formula_1">T = T (α) α∈C</formula><p>We consider that two trees T and T in T are adjacent if the distance between T and T in T is at most one. Note that T and T might not be disjoint, so the distance between them can be zero. Let G denote the graph thus defined: the vertices of G are the subtrees in T and the edges are given by the above adjacency relationship.</p><p>Suppose that G can be properly colored by the coloring function c : T → C . We can use such a coloring to describe a modified list assignment L</p><p>[c ] to the vertices of G in the following way: if T ∈ T (α) and c (T ) = α ∈ C , then replace each occurrence of the color α on the lists L(v), for all vertices v that belong to bags D(t), where t ∈ T , with the color α . This specification of L</p><p>[c ] is consistent, because for any vertex v such that α ∈ L(v), there is exactly one tree T ∈ T (α) such that v belongs to a bag indexed by vertices of T .</p><formula xml:id="formula_2">Claim 1. If c is a proper coloring of G, and L is a bad list assignment for G, then L [c ] is also a bad list assignment for G.</formula><p>This follows because the trees in G preserve the constraints expressed in having a given color on the lists of adjacent vertices of G, while the new colors α can only be used on two different trees T and T when the vertices of G in the bags associated with these trees are at a distance of at least two in G. Claim 2. The graph G has treewidth at most 2(t + 1)r − 1.</p><p>A tree decomposition D for G of width at most 2(t + 1)r can be described as follows. Subdivide each edge tt of T with a node of degree two denoted s(t, t ). Assign to each node t the bag D (t) consisting of those trees T of G that include t. There are at most (t + 1)r such trees. Assign to each node</p><formula xml:id="formula_3">s(t, t ) the bag D (s(t, t )) = D (t) ∪ D (t )</formula><p>. It is straightforward to verify that this satisfies the requirements of a tree decomposition for G.</p><p>The lemma now follows from the fact that G can be properly colored with 2(t + 1)r colors.</p><p>2 Theorem 1. The LIST CHROMATIC NUMBER problem, parameterized by the treewidth bound t, is fixed-parameter tractable, solvable in linear time for every fixed t.</p><p>Proof. The algorithm consists of the following steps.</p><p>Step 1. Compute in linear time, using Bodlaender's algorithm, a tree-decomposition for G of width at most t. Consider the vertices of G to be of type 1.</p><p>Step 2. Introduce 2(t + 1)r new vertices of type 2, and connect each of these to all vertices of G. The treewidth of this augmented graph is at most t + 2(t + 1)r = O(t 2 ).</p><p>Step 3. The problem can now be expressed in MSO logic. That this is so, is not entirely trivial, and is argued as follows (sketch). We employ a routine extension of MSO logic that provides predicates for the two types of vertices.</p><p>If G admits a bad r-list assignment, then this is witnessed by a set of edges F between vertices of G (that is, type 1 vertices) and vertices of type 2 (that represent the colors), such that every vertex v of G has degree r relative to F . Thus, the r incident F -edges represent the colors of L v . It is routine to assert the existence of such a set of edges in MSO logic.</p><p>The property that such a set of edges F represents a bad list assignment can be expressed as: "For every subset F ⊂ F such that every vertex of G has degree 1 relative to F (and thus, F represents a choice of a color for each vertex, chosen from its list), there is an adjacent pair of vertices u and v of G, such that the represented color choice is the same, i.e., u and v are adjacent by edges of F to the same type 2 (color- representing) vertex." The translation of this statement into formal MSO is routine. 2</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Some Coloring Problems That Are Hard for Treewidth</head><p>We tend to think that "all" (or almost all) combinatorial problems are easy for bounded treewidth, but in the case of structured coloring problems, the game is more varied in outcome .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">LIST COLORING and PRECOLORING EXTENSION are W [1]-Hard, Parameterized by Treewidth</head><p>There is a relatively simple reduction to the L IST COLORING and PRECOLORING EX- TENSION problems from the MULTICOLORED CLIQUE problem. The MULTICOLORED CLIQUE problem is known to be W [1]-complete [FHR07] (by a simple reduction from the ordinary CLIQUE). The MULTICOLORED CLIQUE problem takes as input a graph G together with a proper k-coloring of the vertices of G, and is parameterized by k.</p><p>The question is whether there is a k-clique in G consisting of exactly one vertex of each color.</p><p>As example of the reduction is shown in <ref type="figure" target="#fig_0">Figure 1</ref>. The figure shows, for the param- eter value k = 4, the construction of an instance G of LIST COLORING that admits a proper choice of color from each list if and only if the source instance G has a multicolor k-clique.</p><p>The general construction can be easily infered from the example in  To see that PRECOLORING EXTENSION is also W [1]-hard when parameterized by treewidth, we can reduce from the LIST COLORING problem, simply using many pre- colored vertices of degree 1 to enforce the lists. This construction does not increase the treewidth. We have:</p><formula xml:id="formula_4">(i, b) i 1 i 1 (b, g) (b, g) (b, g) (b, g) (f, h) (f, h) (f, h) (f, h) (c, d) (a, g) (i, d) (c, d) (a, g) (i, d) (c, d) (a, g) (i, d) (c, d) (a, g) (i, d) (a, h) (a, h) (a, h) (a, h) (c, e) (c, e) (c, e) (c, e) (d, h) (d, h) (d, h) (d, h) (e, h) (d, g)</formula><p>Theorem 3. PRECOLORING EXTENSION parameterized by treewidth is W [1]-hard.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">EQUITABLE COLORING is W [1]-Hard Parameterized by Treewidth</head><p>The notion of equitable coloring seems to have been first introduced by Meyer in 1973, where an application to scheduling garbage trucks is described <ref type="bibr">[Mey73]</ref>. Recently, Bod- laender and Fomin have shown that determining whether a graph of treewidth at most t admits an equitable coloring, can be solved in time</p><formula xml:id="formula_5">O(n O(t) ) [BF05]</formula><p>. We consider the parameterized complexity of EQUITABLE COLORING (ECP) in graphs with bounded treewidth. We actually prove a stronger result than the one we have so far stated. We show that when ECP is parameterized by (t, r), where t is the treewidth bound, and r is the number of color classes, then the problem is W <ref type="bibr">[1]</ref>-hard.</p><p>To show the desired reduction, we introduce two more general problems. List ana- logues of equitable coloring have been previously studied by <ref type="bibr">Kostochka, et al. [KPW03]</ref>.</p><p>The LIST EQUITABLE COLORING PROBLEM (LECP): Given an input graph G = (V, E), lists L v of colors for every vertex v ∈ V and a positive integer r; does there exist a proper coloring f of G with r colors that for every vertex v ∈ V uses a color from its list L v such that for any two color class, V i and V j of the coloring f,</p><formula xml:id="formula_6">||V i | − |V j || ≤ 1?</formula><p>The NUMBER LIST COLORING PROBLEM (NLCP): Given an input graph G = (V, E), lists L v of colors for every vertex v ∈ V , a function h : ∪ v∈V L v → N, associating a number to each color, and a positive integer r; does there exist a proper coloring f of G with r colors that for every vertex v ∈ V uses a color from its list L v , such that any color class V c of the coloring f is of size h(c)?</p><p>Our main effort is in the reduction of the M ULTICOLOR CLIQUE problem to NLCP. Consider that the instance G = (V, E) of MULTICOLOR CLIQUE has its vertices col- ored by the integers 1, ..., k. Let V [i] denote the set of vertices of color i, and let E[i, j], for 1 ≤ i &lt; j ≤ k, denote the set of edges e = uv, where u ∈ V [i] and v ∈ V [j]. We can assume that |V [i]| = N for all i, and that |E[i, j]| = M for all i &lt; j, that is, we can assume that the vertex color classes of G, and also the edge sets between them, have uniform sizes. (For a simple justification of this assumption, we can reduce MULTICOLOR CLIQUE to itself, taking a union of k! disjoint copies of G, one for each permutation of the color set.)</p><p>We will use following sets of colors in our construction of an instance of NLCP:</p><formula xml:id="formula_7">(1) S = {σ[i, j] : 1 ≤ i = j ≤ k} (2) S = {σ [i, j] : 1 ≤ i = j ≤ k} (3) T = {τ i [r, s] : 1 ≤ i ≤ k, 1 ≤ r &lt; s ≤ k, r = i, s = i} (4) T = {τ i [r, s] : 1 ≤ i ≤ k, 1 ≤ r &lt; s ≤ k, r = i, s = i} (5) E = {[i, j] : 1 ≤ i &lt; j ≤ k} (6) E = { [i, j] : 1 ≤ i &lt; j ≤ k} Note that |S| = |S | = 2 k 2</formula><p>, that is, there are distinct colors σ <ref type="bibr">[2,</ref><ref type="bibr">3]</ref> and σ <ref type="bibr">[3,</ref><ref type="bibr">2]</ref>, etc. In contrast, the colors τ i [r, s] are only defined for r &lt; s.</p><p>We associate with each vertex and edge of G a pair of (unique) identification num- bers. Choose a second large positive integer, Z 1 &gt;&gt; Z 0 , for example, we may take Z 1 = n 6 . Next we describe various gadgets and the way they are combined in the reduction. First we describe the gadget which encodes the selection of the edge going between two particular color classes in G. In other words, we will think of the representation of a k-clique in G as involving the selection of edges (with each edge selected twice, once in each direction) between the color classes of vertices in G, with gadgets for selection, and to check two things: (1) that the selections in opposite color directions match, and <ref type="formula">(2)</ref>  That completes the formal description of the reduction from M ULTICOLOR CLIQUE to NLCP. We turn now to some motivating remarks about the design of the reduction.</p><p>Remarks on the colors, their numerical targets, and their role in the reduction.</p><p>(1) There are 2 k 2 groups of gadgets. Each edge of G gives rise to two gadgets. Between any two color classes of G there are precisely M edges, and therefore M · k 2 edges in G in total. Each group of gadgets therefore contains M gadgets. The gadgets in each group have two "helper" colors. For example, the group of gadgets G <ref type="bibr">[4,</ref><ref type="bibr">2]</ref> has the helper colors σ <ref type="bibr">[4,</ref><ref type="bibr">2]</ref> and σ <ref type="bibr">[4,</ref><ref type="bibr">2]</ref>. The role of the gadgets in this group is to indicate a choice of an edge going from a vertex in the color class V <ref type="bibr">[4]</ref> of G to a vertex in the color class V <ref type="bibr">[2]</ref> of G. The role of the 2 k 2 groups of gadgets is to represent the selection of k 2 edges of G that form a k-clique, with each edge chosen twice, once in each direction. If i &lt; j then the choice is represented by the coloring of the gadgets in the group G <ref type="bibr">[i, j]</ref>, and these are the forward gadgets of the edge choice. If j &lt; i, then the gadgets in G <ref type="bibr">[i, j]</ref> are backward gadgets (representing the edge selection in the opposite direction, relative to the ordering of the color classes of G). The numerical targets for the colors in S ∪ S are chosen to force exactly one edge to be selected (forward or backward) by each group of gadgets, and to force the gadgets that are colored in a way that indicates the edge was not selected into being colored in a particular way (else the numerical targets cannot be attained). The numerical targets for these colors are complicated, because of this role (which is asymmetric between the pair of colors σ <ref type="bibr">[i, j]</ref> and</p><formula xml:id="formula_8">σ [i, j]).</formula><p>(2) The colors in T ∪ T and E ∪ E are organized in symmetric pairs, and each pair is used to transmit (and check) information. Due to the enforcements alluded to above, each "selection" coloring of a gadget (there will be only one possible in each group of gadgets), will force some numbers of vertices to be colored with these pairs of colors, which can be thought of as an information transmission. For example, when a gadget in G <ref type="bibr">[4,</ref><ref type="bibr">2]</ref> is colored with a "selection" coloring, this indicates that the edge from which the gadget arises is selected as the edge from the color class V <ref type="bibr">[4]</ref> of G, to the color class V <ref type="bibr">[2]</ref>. There is a pair of colors that handles the information transmission concerning which edge is selected between the groups G <ref type="bibr">[2,</ref><ref type="bibr">4]</ref> and G <ref type="bibr">[4,</ref><ref type="bibr">2]</ref>. (Of course, something has to check that the edge selected in one direction, is the same as the edge selected in the other direction.) There is something neat about the dual-color transmission channel for this information. Each vertex and edge has two unique identification numbers, "up" and "down", that sum to Z 0 . To continue the concrete example, G <ref type="bibr">[4,</ref><ref type="bibr">2]</ref> uses the (number of vertices colored by the) pair of colors <ref type="bibr">[2,</ref><ref type="bibr">4]</ref> and <ref type="bibr">[2,</ref><ref type="bibr">4]</ref> to communicate to G <ref type="bibr">[2,</ref><ref type="bibr">4]</ref> about the edge selected. The signal from one side consists of e[up] vertices colored <ref type="bibr">[2,</ref><ref type="bibr">4]</ref> and e[down] vertices colored <ref type="bibr">[2,</ref><ref type="bibr">4]</ref>. The signal from the other side consists of e[down] vertices colored <ref type="bibr">[2,</ref><ref type="bibr">4]</ref> and e[up] vertices colored <ref type="bibr">[2,</ref><ref type="bibr">4]</ref>. Thus the numerical targets for these colors allow us to check whether the same edge has been selected in each direction (if each color target of Z 0 is met). There is the additional advantage that the amount of signal in each direction is the same: in each direction a total of Z 0 colored vertices, with the two paired colors, constitutes the signal. This means that, modulo the discussion in (1) above, when an edge is not selected, the corresponding non-selection coloring involves uniformly the same number (i.e., Z 0 ) of vertices colored "otherwise" for each of the (M − 1) gadgets colored in the non-selection way: this explains (part of) the (k − 1)(M − 1)Z 0 term in <ref type="formula">(4)</ref>  The above remarks are intended to aid an intuitive understanding of the reduction. We now return to a more formal argument. Claim 1. If G has a k-multicolor clique, then G is a yes-instance to NLCP. The proof of this claim is relatively straightforward. The gadgets corresponding to the edges of a k-clique in G are colored in a manner that indicates "selected" (for both the forward and the backward gadgets) and all other gadgets are colored in manner that indicates "non-selected". The coloring that corresponds to "selected" colors the root vertex with the color σ <ref type="bibr">[i, j]</ref>, and this forces the rest of the coloring of the gadget. The coloring that corresponds to "non-selected" colors the root vertex with the color σ <ref type="bibr">[i, j]</ref>. In this case the coloring of the rest of the gadget is not entirely forced, but if the grandchildren vertices of the gadget are also colored with σ <ref type="bibr">[i, j]</ref>, then all the numerical targets will be met. Claim 2. Suppose that Γ is a list coloring of G that meets all the numerical targets. Then in each group of gadgets, exactly one gadget is colored in a way that indicates "selection".</p><p>We argue this as follows. There cannot be two gadgets in any group colored in the "selection" manner, since this would make it impossible to meet the numerical target for a color in S. If no gadget is colored in the "selection" manner, then again the targets cannot be met for the colors in S ∪ S used in the lists for this group of gadgets.</p><p>Claim 3. Suppose that Γ is a list coloring of G that meets all the numerical targets. Then in each group of gadgets, every gadget that is not colored in a way that indicates "selection" must have all of its grandchildren vertices colored with the appropriate color in S . Claim 3 follows from Claim 2, noting that the numerical targets for the S colors cannot be met unless this is so.</p><p>It follows from Claims 2 and 3, that if Γ is a list coloring of G that meets all the numerical targets, then in each group of gadgets, exactly one gadget is colored in the "selection" manner, and all other gadgets are colored in a completely determined "nonselection" manner. Each "selection" coloring of a gadget produces a numerical signal (based on vertex and edge identification numbers) carried by the colors in T ∪T and E ∪ E , with two signals per color. The target of Z 0 for these colors can only be achieved if the selection colorings indicate a clique in G.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Theorem 4. NLCP is W[1]-hard for trees, parameterized by the number of colors that appear on the lists.</head><p>The reduction from NLCP to LECP is almost trivial, achieved by padding with isolated vertices having single-color lists.</p><p>The reduction from LECP to ECP is described as follows. Create a clique of size r, the number of colors occuring on the lists, and connect the vertices of this clique to the vertices of G in a manner that enforces the lists. Since G is a tree, the treewidth of the resulting graph is at most r. We have:</p><p>Theorem 5. EQUITABLE COLORING is W [1]-hard, parameterized by treewidth.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Discussion and Open Problems</head><p>Structured optimization problems, such as the coloring problems considered here, have strong claims with respect to applications. A source of discussion of these applications is the recent dissertation of <ref type="bibr">Marx [Ma04]</ref>. It seems interesting and fruitful to consider such problems from the parameterized point of view, and to investigate how such extra problem structure (which tends to increase both computational complexity, and real- world applicability) interacts with parameterizations (such as bounded treewidth), that frequently lead to tractability.</p><p>The outcome of the investigation here of some well-known locally and globally constrained coloring problems has turned up a few surprises: first of all, that the L IST CHROMATIC NUMBER problem is actually FPT, when we parameterize by treewidth. It is also somewhat surprising that this good news does not extend to L IST COLORING, PRECOLORING EXTENSION or EQUITABLE COLORING, all of which turn out to be hard for W <ref type="bibr">[1]</ref>.</p><p>There are many interesting open problems concerning the parameterized complex- ity of "more structured" combinatorial optimization problems on graphs, parametered by treewidth. We mention the following two: (1) Is the LIST EDGE CHROMATIC NUMBER problem fixed-parameter tractable, pa- rameterized by treewidth? (2) One can formulate a "list analogue" of the HAMILTONIAN PATH problem as fol- lows: each vertex is assigned a list that is a subset of {1, 2, ..., n}indicating the positions in the ordering of the n vertices implicit in a Hamiltonian path that are permitted to the vertex. Is the LIST HAMILTONIAN PATH problem FPT, parameterized by treewidth?</p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Figure 1 .</head><label>1</label><figDesc>The colors on the lists are in 1:1 correspondence with the vertices of G. There are k vertices v[i], i = 1, ..., k, one for each color class of G, and the list assigned to v[i] consists of the colors corresponding to the vertices in G of color i. For i = j, there are various vertices of degree two in G , each having a list of size 2. There is one such degree two vertex in G for each pair x, y of nonadjacent vertices, where x has color i and y has color j.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Fig. 1 .</head><label>1</label><figDesc>Fig. 1. Example of the reduction from MULTICOLOR CLIQUE to LIST COLORING.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head></head><label></label><figDesc>The up-identification number v[up] for a vertex v should be in the range [n 2 + 1, n 2 + n], if G has n vertices. Similarly, the up-identification number e[up] of an edge e of G can be assigned (arbitrarily, but uniquely) in the range [2n 2 + 1, 2n 2 + m], assuming G has m edges. Choose a suitably large positive integer Z 0 , for example Z 0 = n 3 , and define the down-identification number v[down] for a vertex v to be Z 0 − v[up], and similarly for the edges e of G, define the down-identification number e[down] to be Z 0 − e[up].</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>that the edges chosen from color class V [i] going to V [j] (for the various j = i) all emanate from the same vertex in V [i]. (This is sometimes termed an edge representation strategy for the parameterized reduction from MULTICOLOR CLIQUE.) There are 2 k 2 groups of gadgets, one for each pair of color indices i = j. If 1 ≤ i &lt; j ≤ k, then we will refer to the gadgets in the group G[i, j] as forward gadgets, and we will refer to the gadgets in the group G[j, i] as backward gadgets. If e ∈ E[i, j], then there is one forward gadget corresponding to e in the group G[i, j], and one backward gadget corresponding to e in the group G[j, i]. The construc- tion of these gadgets is described as follows. The forward gadget corresponding to e = uv ∈ E[i, j]. The gadget has a root vertex r[i, j, e], and consists of a tree of height 2. The list assigned to this root vertex contains two colors: σ[i, j] and σ [i, j]. The root vertex has Z 1 + 1 children, and each of these is also assigned the two-element list containing the colors σ[i, j] and σ [i, j]. One of the children vertices is distinguished, and has 2(k −1) groups of further children: -e[up] children assigned the list {σ [i, j], ,[i, j]}. -e[down] children assigned the list {σ [i, j], , [i, j]}. -For each r in the range j &lt; r ≤ k, u[up] children assigned the list {σ [i, j], τ i [j, r]}. -For each r in the range j &lt; r ≤ k, u[down] children assigned {σ [i, j], τ i [j, r]}. -For each r in the range 1 ≤ r &lt; j, u[down] children assigned {σ [i, j], τ i [r, j]}. -For each r in the range 1 ≤ r &lt; j, u[up] children assigned the list {σ [i, j], τ i [r, j]}. The backward gadget corresponding to e = uv ∈ E[i, j]. The gadget has a root vertex r[j, i, e], and consists of a tree of height 2. The list assigned to this root vertex contains two colors: σ[j, i] and σ [j, i]. The root vertex has Z 1 + 1 children, and each of these is also assigned the two-element list containing the colors σ[j, i] and σ [j, i]. One of the children vertices is distinguished, and has 2k groups of further children: -e[up] children assigned the list {σ [j, i], , [i, j]}. -e[down] children assigned the list {σ [j, i], ,[i, j]}. -For each r in the range i &lt; r ≤ k, v[up] children assigned the list {σ [j, i], τ j [i, r]}. -For each r in the range i &lt; r ≤ k, v[down] children assigned {σ [j, i], τ j [i, r]}. -For each r in the range 1 ≤ r &lt; i, v[down] children assigned {σ [j, i], τ j [r, i]}. -For each r in the range 1 ≤ r &lt; i, v[up] children assigned the list {σ [j, i], τ j [r, i]}. The numerical targets. (1) Each color in T ∪ T has the target: Z 0 . (2) Each color in E ∪ E has the target: Z 0 . (3) Each color in S has the target: (M − 1)(Z 1 + 1) + 1. (4) Each color in S has the target: (M − 1) + (Z 1 + 1) + (k − 1)(M − 1)Z 0 .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head></head><label></label><figDesc>of the numerical targets. (3) In a similar manner to the communication task discussed above, each of the k − 1 groups of gadgets G[i, ] need to check that each has selected an edge from V [i] that originates at the same vertex in V [i]. Hence there are pairs of colors that provide a communication channel similar to that in (2) for this information. This role is played by the colors in T ∪ T . (Because of the bookkeeping issues, this becomes somewhat intricate in the formal definition of the reduction.)</figDesc></figure>
		</body>
		<back>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title level="a" type="main">Lagergren and D. Seese. Easy problems for tree-decomposable graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Arnborg</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Algorithms</title>
		<imprint>
			<biblScope unit="volume">12</biblScope>
			<biblScope unit="page" from="308" to="340" />
			<date type="published" when="1991" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title level="a" type="main">Equitable colorings of bounded treewidth graphs</title>
	</analytic>
	<monogr>
		<title level="j">Theoretical Computer Science</title>
		<editor>H. L. Bodlaender and F. V. Fomin</editor>
		<imprint>
			<biblScope unit="volume">349</biblScope>
			<biblScope unit="page" from="22" to="30" />
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title level="a" type="main">Quadratic kernelization for convex recoloring of trees</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><forename type="middle">L</forename><surname>Bodlaender</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Fellows</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Langston</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">A</forename><surname>Ragan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Rosamond</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Weyer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Lecture Notes in Computer Science</title>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2007" />
			<biblScope unit="page">to appear</biblScope>
		</imprint>
	</monogr>
	<note>Proceedings COCOON</note>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title level="a" type="main">Automatic generation of linear-time algorithms from predicate calculus descriptions of problems on recursively generated graph families</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">B</forename><surname>Borie</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">G</forename><surname>Parker</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">A</forename><surname>Tovey</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Algorithmica</title>
		<imprint>
			<biblScope unit="volume">7</biblScope>
			<biblScope unit="page" from="555" to="581" />
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title level="a" type="main">Connected coloring completion for general graphs: algorithms and complexity</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Chor</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Fellows</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">A</forename><surname>Ragan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Razgon</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Rosamond</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Snir</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Lecture Notes in Computer Science</title>
		<imprint>
			<publisher>Springer-Verlag</publisher>
			<date type="published" when="2007" />
			<biblScope unit="page">to appear</biblScope>
		</imprint>
	</monogr>
	<note>Proceedings COCOON</note>
</biblStruct>

<biblStruct xml:id="b5">
	<monogr>
		<title level="m" type="main">The monadic second-order logic of graphs I: Recognizable sets of finite graphs</title>
		<editor>B. Courcelle</editor>
		<imprint>
			<date type="published" when="1990" />
			<biblScope unit="page" from="12" to="75" />
		</imprint>
	</monogr>
	<note>Information and Computation</note>
</biblStruct>

<biblStruct xml:id="b6">
	<monogr>
		<title level="m" type="main">Congressus Numerantium 26</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Erdös</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">L</forename><surname>Rubin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Taylor</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1980" />
			<biblScope unit="page" from="122" to="157" />
		</imprint>
	</monogr>
	<note>Choosability in graphs</note>
</biblStruct>

<biblStruct xml:id="b7">
	<monogr>
		<title level="m" type="main">The lawnmower and other problems: applications of MSO logic in geometry</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Fellows</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Giannopoulos</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Knauer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Paul</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Rosamond</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Whitesides</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><surname>Yu</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2007" />
		</imprint>
	</monogr>
<note type="report_type">Manuscript</note>
</biblStruct>

<biblStruct xml:id="b8">
	<monogr>
		<title level="m" type="main">Hermelin and F. Rosamond. On the fixed-parameter intractability and tractability of multiple-interval graph properties</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Fellows</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename></persName>
		</author>
		<imprint>
			<date type="published" when="2007" />
		</imprint>
	</monogr>
<note type="report_type">Manuscript</note>
</biblStruct>

<biblStruct xml:id="b9">
	<analytic>
		<title level="a" type="main">Generalized colorings for tree-like graphs</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Jansen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Scheffler</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Discrete Applied Mathematics</title>
		<imprint>
			<biblScope unit="volume">75</biblScope>
			<biblScope unit="page" from="135" to="155" />
			<date type="published" when="1997" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<monogr>
		<title level="m" type="main">Graph Coloring Problems</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><forename type="middle">R</forename><surname>Jensen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Toft</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1995" />
			<publisher>Wiley Interscience</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title level="a" type="main">A list analogue of equitable coloring</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">V</forename><surname>Kostochka</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">J</forename><surname>Pelsmajer</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">B</forename><surname>West</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Graph Theory</title>
		<imprint>
			<biblScope unit="volume">44</biblScope>
			<biblScope unit="page" from="166" to="177" />
			<date type="published" when="2003" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title level="a" type="main">New trends in the theory of graph colorings: choosability and list coloring. In: Contemporary Trends in Discrete Mathematics (from DIMACS and DIMATIA to the future</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Kratochvil</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Z</forename><surname>Tuza</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Voigt</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">DIMACS Series in Discrete Mathematics and Theoretical Computer Science, vol. 49</title>
		<imprint>
			<publisher>AMS</publisher>
			<date type="published" when="1999" />
			<biblScope unit="page" from="183" to="197" />
		</imprint>
		<respStmt>
			<orgName>R. Graham, et al.</orgName>
		</respStmt>
	</monogr>
<note type="report_type">Providence</note>
</biblStruct>

<biblStruct xml:id="b13">
	<monogr>
				<title level="m">D. Marx. Graph coloring with local and global constraints. Ph.D. dissertation, Department of Computer Science and Information Theory, Budapest University of Technology and Economics</title>
		<imprint>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<analytic>
		<title level="a" type="main">Equitable coloring</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Meyer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">American Mathematical Monthly</title>
		<imprint>
			<biblScope unit="volume">80</biblScope>
			<biblScope unit="page" from="920" to="922" />
			<date type="published" when="1973" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b15">
	<monogr>
		<title level="m" type="main">Invitation to Fixed Parameter Algorithms</title>
		<imprint>
			<date type="published" when="2006" />
			<publisher>R. Niedermeier</publisher>
		</imprint>
		<respStmt>
			<orgName>Oxford University Press</orgName>
		</respStmt>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<monogr>
				<title level="m">Z. Tuza. Graph colorings with local constraints-A survey. Discussiones Mathematicae-Graph Theory</title>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="volume">17</biblScope>
			<biblScope unit="page" from="161" to="228" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<monogr>
		<title level="m" type="main">Coloring the vertices of a graph in prescribed colors</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">V</forename><forename type="middle">G</forename><surname>Vizing</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1976" />
			<biblScope unit="page" from="3" to="10" />
		</imprint>
	</monogr>
	<note>Metody Diskret. Anal. v Teorii Kodov i Schem 29</note>
</biblStruct>

<biblStruct xml:id="b18">
	<monogr>
		<title level="m" type="main">London Math. Soc. Lecture Notes Series 288</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">R</forename><surname>Woodall</surname></persName>
		</author>
		<editor>Surveys in Combinatorics 2001 (J. W. P. Hirschfeld</editor>
		<imprint>
			<date type="published" when="2001" />
			<biblScope unit="page" from="269" to="301" />
		</imprint>
		<respStmt>
			<orgName>Cambridge Univ. Press</orgName>
		</respStmt>
	</monogr>
	<note>List colourings of graphs</note>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
