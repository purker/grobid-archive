<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 C:\Users\Angela\git\grobid\grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.5-dummy" ident="GROBID" when="2017-12-29T00:16+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main"></title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<abstract>
				<p>the numbers of vertices having any two distinct colors differs by at most one. We show that the problem is hard for W [1], parameterized by (t, r). We also show that a list-based variation, LIST EQUITABLE COLORING is W [1]-hard for trees, parameterized by the number of colors on the lists. Topics: Parameterized Complexity, Bounded Treewidth, Graph Coloring This research has been supported by the Australian Research Council through the Australian Centre in Bioinformatics. The first author also acknowledges the support provided by a Fellowship to the Institute of Advanced Studies, Durham University, and the support of the Infor-matics Institute at the University of Bergen during an extended visit. 1 Introduction Coloring problems that involve local and global restrictions on the coloring have many important applications in such areas as operations research, scheduling and computational biology, and also have a long mathematical history. For recent surveys of the area one can turn to [Tu97,KTV98,Al00,Wo01] and also the book [JT95]. In this paper we study the computational complexity of such problems, for graphs of bounded treewidth, in the framework of parameterized complexity [DF99,Nie06], where we take the parameter to be the treewidth bound t. Our main results are summarized:-We show that the list chromatic number (also known as the choice number [KTV98]) of a graph can be computed in linear time for any fixed treewidth bound t. (We prove this using a new &quot;trick&quot; for extending the applicability of Monadic Second Order logic that is of general interest.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.1">LIST CHROMATIC NUMBER Parameterized by Treewidth is FPT</head><p>The notion of the list chromatic number (also known as the choice number) of a graph was introduced by Vizing in 1976 <ref type="bibr">[Viz76]</ref>, and independently by Erdös, Rubin and Taylor in 1980 <ref type="bibr">[ERT80]</ref>. A celebrated result that gave impetus to the area was proved by Thomassen: every planar graph has list chromatic number at most five <ref type="bibr">[Th94]</ref>.</p><p>We describe an algorithm for the LIST CHROMATIC NUMBER problem that runs in linear time for any fixed treewidth bound t. Our algorithm employs the machinery of Monadic Second Order (MSO) logic, due to Courcelle <ref type="bibr">[Cou90]</ref> (also <ref type="bibr">[ALS91,BPT92]</ref>). At a glance, this may seem surprising, since there is no obvious way to describe the problem in MSO logic -one would seemingly have to quantify over all possible list assignments to the vertices of G, and the vocabulary of MSO seems not to provide any way to do this. We employ a "trick" that was first described (to our knowledge) in <ref type="bibr">[BFLRRW06]</ref>, with further applications described in <ref type="bibr">[CFRRRS07,FGKPRWY07]</ref>.</p><p>The essence of the trick is to construct an auxiliary graph that consists of the original input, augmented with additional semantic vertices, so that the whole ensemble has -or can safely be assumed to have -bounded treewidth, and relative to which the problem of interest can be expressed in MSO logic.</p><p>A list assignment L with |L(v)| ≥ r for all v ∈ V is termed an r-list assignment. A list assignment L from which G cannot be properly colored is called bad. Thus, a graph G does not have list chromatic number χ l (G) ≤ r, if and only if there is a bad r-list assignment for G.</p><p>The following lemma is crucial to the approach. Proof. First of all, we may note that if G has treewidth bounded by t, then χ l (G) ≤ t+1 (and similarly, the chromatic number of G is at most t + 1). This follows easily from the inductive definition of t-trees. We can therefore assume that r ≤ t. Fix attention on a width t tree decomposition D for G, where the bags of the decom- position are indexed by the tree T . For a node t of T , let D(t) denote the bag associated to the node t. Suppose that L is a bad r-list assignment for G, and let C denote the union of the lists of L. For a color α ∈ C, let T α denote the subforest of T induced by the set of vertices t of T for which D(t) contains a vertex v of G, where the color α occurs in the list L(v). Let T (α) denote the set of trees of the forest T α . Let T denote the union of the sets T (α), taken over all of the colors α that occur in the list assignment L: </p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>α∈C</head><p>We consider that two trees T and T in T are adjacent if the distance between T and T in T is at most one. Note that T and T might not be disjoint, so the distance between them can be zero. Let G denote the graph thus defined: the vertices of G are the subtrees in T and the edges are given by the above adjacency relationship.</p><p>Suppose that G can be properly colored by the coloring function c : T → C . We can use such a coloring to describe a modified list assignment L <ref type="bibr">[c ]</ref> to the vertices of G in the following way: if T ∈ T (α) and c (T ) = α ∈ C , then replace each occurrence of the color α on the lists L(v), for all vertices v that belong to bags D(t), where t ∈ T , with the color α . This specification of L <ref type="bibr">[c ]</ref> is consistent, because for any vertex v such that α ∈ L(v), there is exactly one tree T ∈ T (α) such that v belongs to a bag indexed by vertices of T . This follows because the trees in G preserve the constraints expressed in having a given color on the lists of adjacent vertices of G, while the new colors α can only be used on two different trees T and T when the vertices of G in the bags associated with these trees are at a distance of at least two in G. of T with a node of degree two denoted s(t, t ). Assign to each node t the bag D (t) consisting of those trees T of G that include t. There are at most (t + 1)r such trees. Assign to each node s(t, t ) the bag D (s(t, t )) = D (t) ∪ D (t ). It is straightforward to verify that this satisfies the requirements of a tree decomposition for G.</p><p>The lemma now follows from the fact that G can be properly colored with 2(t + 1)r colors. 2 Proof. The algorithm consists of the following steps. Step 1. Compute in linear time, using Bodlaender's algorithm, a tree-decomposition for G of width at most t. Consider the vertices of G to be of type 1. Step 2. Introduce 2(t + 1)r new vertices of type 2, and connect each of these to all vertices of G. The treewidth of this augmented graph is at most t + 2(t + 1)r = O(t 2 ). Step 3. The problem can now be expressed in MSO logic. That this is so, is not entirely trivial, and is argued as follows (sketch). We employ a routine extension of MSO logic that provides predicates for the two types of vertices.</p><p>If G admits a bad r-list assignment, then this is witnessed by a set of edges F between vertices of G (that is, type 1 vertices) and vertices of type 2 (that represent the colors), such that every vertex v of G has degree r relative to F . Thus, the r incident F -edges represent the colors of L v . It is routine to assert the existence of such a set of edges in MSO logic.</p><p>The property that such a set of edges F represents a bad list assignment can be expressed as: "For every subset F ⊂ F such that every vertex of G has degree 1 relative to F (and thus, F represents a choice of a color for each vertex, chosen from its list), there is an adjacent pair of vertices u and v of G, such that the represented color choice is the same, i.e., u and v are adjacent by edges of F to the same type 2 (color- representing) vertex." The translation of this statement into formal MSO is routine. 2</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">Some Coloring Problems That Are Hard for Treewidth</head><p>We tend to think that "all" (or almost all) combinatorial problems are easy for bounded treewidth, but in the case of structured coloring problems, the game is more varied in outcome . <ref type="figure">PRECOLORING EXTENSION are W [1]-Hard,</ref> Parameterized by Treewidth</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">LIST COLORING and</head><p>There is a relatively simple reduction to the L IST COLORING and PRECOLORING EX- TENSION problems from the MULTICOLORED CLIQUE problem. The MULTICOLORED CLIQUE problem is known to be W <ref type="bibr">[1]</ref>-complete <ref type="bibr">[FHR07]</ref> (by a simple reduction from the ordinary CLIQUE). The MULTICOLORED CLIQUE problem takes as input a graph G together with a proper k-coloring of the vertices of G, and is parameterized by k. The question is whether there is a k-clique in G consisting of exactly one vertex of each color. As example of the reduction is shown in Figure 1. The figure shows, for the param- eter value k = 4, the construction of an instance G of LIST COLORING that admits a proper choice of color from each list if and only if the source instance G has a multicolor k-clique.</p><p>The general construction can be easily infered from the example in Figure 1. The colors on the lists are in 1:1 correspondence with the vertices of G. There are k vertices v <ref type="bibr">[i]</ref>, i = 1, ..., k, one for each color class of G, and the list assigned to v <ref type="bibr">[i]</ref> consists of the colors corresponding to the vertices in G of color i. For i = j, there are various vertices of degree two in G , each having a list of size 2. There is one such degree two vertex in G for each pair x, y of nonadjacent vertices, where x has color i and y has color j.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>a b</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>a b</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>a b</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>a b</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>a b</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>a b</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">2</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">2</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">2</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">2</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">2</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">2</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>c</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>c</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>c</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>c</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>c</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>c</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>1</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>1</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>1</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>1</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>1</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>1</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>h</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>h</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>h</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>h</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>h</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>h</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>d e</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>d e</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>4</head><p>d e</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>d e</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">3 4</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">4</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">4</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>3</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>d e g</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">4</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">4</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">4</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>3</head><p>d e g <ref type="figure">(a, c, i)  (a, f)   2   (a, c, i)  (a, f)   2   (a, c, i)  (a, f)   2</ref> (a, c, i) (a, f)</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">1</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>1</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>1</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>1</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2</head><p>(c, f) <ref type="figure">(b, f)   (c, f)   (b, f)   (c, f)   (b, f)   (c, f)   (b, f)   (i, b)</ref> (i, b)</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>f</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>f</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>f</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>f</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>f</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>f</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>i 1</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>i 1</head><p>(i, b)</p><p>(i, b)</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>i 1</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>i 1</head><p>(b <ref type="figure">, g)   (b, g)   (b, g)   (b, g)   (f, h)   (f, h)   (f, h)   (f, h)   (c, d)  (a, g)   (i, d)   (c, d)  (a, g)   (i, d)   (c, d)  (a, g)   (i, d)   (c, d)  (a, g)   (i, d)   (a, h)   (a, h)   (a, h)   (a, h)   (c, e)   (c, e)   (c, e)</ref> (c, e) <ref type="bibr">(d, h)</ref> (d, h) <ref type="bibr">(d, h)</ref> (d, h) <ref type="bibr">(e, h)</ref> (d, g)</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>4</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>3</head><p>(e, h)</p><p>(d, g)</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>4</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>3</head><p>(e, h)</p><p>(d, g)</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>4</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>3</head><p>(e, h)</p><p>(d, g) <ref type="figure">Fig. 1</ref>. Example of the reduction from MULTICOLOR CLIQUE to LIST COLORING.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">3</head><p>Verification that the reduction works correctly is easy, and is left to the reader. The treewidth of G is bounded by k + 1.</p><p>To see that PRECOLORING EXTENSION is also W <ref type="bibr">[1]</ref>-hard when parameterized by treewidth, we can reduce from the LIST COLORING problem, simply using many pre- colored vertices of degree 1 to enforce the lists. This construction does not increase the treewidth. We have <ref type="figure">:   Theorem 3</ref>. PRECOLORING EXTENSION parameterized by treewidth is W <ref type="bibr">[1]</ref>-hard. <ref type="figure">COLORING is W [1]</ref>-Hard Parameterized by Treewidth</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">EQUITABLE</head><p>The notion of equitable coloring seems to have been first introduced by Meyer in 1973, where an application to scheduling garbage trucks is described <ref type="bibr">[Mey73]</ref>. Recently, Bod- laender and Fomin have shown that determining whether a graph of treewidth at most t admits an equitable coloring, can be solved in time O(n O(t) ) <ref type="bibr">[BF05]</ref>. We consider the parameterized complexity of EQUITABLE COLORING (ECP) in graphs with bounded treewidth. We actually prove a stronger result than the one we have so far stated. We show that when ECP is parameterized by (t, r), where t is the treewidth bound, and r is the number of color classes, then the problem is W <ref type="bibr">[1]</ref>-hard.</p><p>To show the desired reduction, we introduce two more general problems. List ana- logues of equitable coloring have been previously studied by Kostochka, et al. <ref type="bibr">[KPW03]</ref>.</p><p>The LIST EQUITABLE COLORING PROBLEM (LECP): Given an input graph G = (V, E), lists L v of colors for every vertex v ∈ V and a positive integer r; does there exist a proper coloring f of G with r colors that for every vertex v ∈ V uses a color from its list L v such that for any two color class, V i and V j of the coloring f, ||V i | − |V j || ≤ 1? The NUMBER LIST COLORING PROBLEM (NLCP): Given an input graph G = (V, E), lists L v of colors for every vertex v ∈ V , a function h : ∪ v∈V L v → N, associating a number to each color, and a positive integer r; does there exist a proper coloring f of G with r colors that for every vertex v ∈ V uses a color from its list L v , such that any color class V c of the coloring f is of size h(c)?</p><p>Our main effort is in the reduction of the M ULTICOLOR CLIQUE problem to NLCP. Consider that the instance G = (V, E) of MULTICOLOR CLIQUE has its vertices col- ored by the integers 1, ..., k. Let V <ref type="bibr">[i]</ref> denote the set of vertices of color i, and let E <ref type="bibr">[i, j]</ref>, for 1 ≤ i &lt; j ≤ k, denote the set of edges e = uv, where u ∈ V <ref type="bibr">[i]</ref> and v ∈ V <ref type="bibr">[j]</ref>. We can assume that |V <ref type="bibr">[i]</ref>| = N for all i, and that |E[i, j]| = M for all i &lt; j, that is, we can assume that the vertex color classes of G, and also the edge sets between them, have uniform sizes. (For a simple justification of this assumption, we can reduce MULTICOLOR CLIQUE to itself, taking a union of k! disjoint copies of G, one for each permutation of the color set.)</p><p>We will use following sets of colors in our construction of an instance of NLCP:  <ref type="bibr">[r, s]</ref> are only defined for r &lt; s.</p><note type="other">(1) S = {σ[i, j] : 1 ≤ i = j ≤ k} (2) S = {σ [i, j] : 1 ≤ i = j ≤ k} (3) T = {τ i [r, s] : 1 ≤ i ≤ k, 1 ≤ r &lt; s ≤ k, r = i, s = i} (4) T = {τ i [r, s] : 1 ≤ i ≤ k, 1 ≤ r &lt; s ≤ k, r = i, s = i} (5) E = {[i, j] : 1 ≤ i &lt; j ≤ k} (6) E = { [i, j]</note><p>We associate with each vertex and edge of G a pair of (unique) identification num- bers. The up-identification number v <ref type="bibr">[up]</ref> for a vertex v should be in the range [n 2 + 1, n 2 + n], if G has n vertices. Similarly, the up-identification number e <ref type="bibr">[up]</ref> of an edge e of G can be assigned (arbitrarily, but uniquely) in the range [2n 2 + 1, 2n 2 + m], assuming G has m edges.</p><p>Choose a suitably large positive integer Z 0 , for example Z 0 = n 3 , and define the down-identification number v <ref type="bibr">[down]</ref> for a vertex v to be Z 0 − v <ref type="bibr">[up]</ref>, and similarly for the edges e of G, define the down-identification number e <ref type="bibr">[down]</ref> to be Z 0 − e <ref type="bibr">[up]</ref>.</p><p>Choose a second large positive integer, Z 1 &gt;&gt; Z 0 , for example, we may take Z 1 = n 6 . Next we describe various gadgets and the way they are combined in the reduction. First we describe the gadget which encodes the selection of the edge going between two particular color classes in G. In other words, we will think of the representation of a k-clique in G as involving the selection of edges (with each edge selected twice, once in each direction) between the color classes of vertices in G, with gadgets for selection, and to check two things: <ref type="bibr">(1</ref>) that the selections in opposite color directions match, and (2) that the edges chosen from color class V <ref type="bibr">[i]</ref> going to V <ref type="bibr">[j]</ref> (for the various j = i) all emanate from the same vertex in V <ref type="bibr">[i]</ref>. (This is sometimes termed an edge representation strategy for the parameterized reduction from MULTICOLOR CLIQUE.)</p><p>There are 2 k</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2</head><p>groups of gadgets, one for each pair of color indices i = j. If 1 ≤ i &lt; j ≤ k, then we will refer to the gadgets in the group G <ref type="bibr">[i, j]</ref> as forward gadgets, and we will refer to the gadgets in the group G <ref type="bibr">[j, i]</ref> as backward gadgets.</p><p>If e ∈ E <ref type="bibr">[i, j]</ref>, then there is one forward gadget corresponding to e in the group G <ref type="bibr">[i, j]</ref>, and one backward gadget corresponding to e in the group G <ref type="bibr">[j, i]</ref>. The construc- tion of these gadgets is described as follows. The forward gadget corresponding to e = uv ∈ E <ref type="bibr">[i, j]</ref>. The gadget has a root vertex r <ref type="bibr">[i, j, e]</ref>, and consists of a tree of height 2.  <ref type="bibr">[down]</ref> children assigned the list {σ <ref type="bibr">[i, j]</ref>, , <ref type="bibr">[i, j]</ref>}. -For each r in the range j &lt; r ≤ k, u <ref type="bibr">[up]</ref> children assigned the list {σ <ref type="bibr">[i, j]</ref>, τ i [j, r]}. -For each r in the range j &lt; r ≤ k, u <ref type="bibr">[down]</ref> children assigned {σ <ref type="bibr">[i, j]</ref>, τ i [j, r]}. -For each r in the range 1 ≤ r &lt; j, u <ref type="bibr">[down]</ref> children assigned {σ <ref type="bibr">[i, j]</ref>, τ i [r, j]}. -For each r in the range 1 ≤ r &lt; j, u <ref type="bibr">[up]</ref> children assigned the list {σ <ref type="bibr">[i, j]</ref>, τ i [r, j]}. The backward gadget corresponding to e = uv ∈ E <ref type="bibr">[i, j]</ref>. The gadget has a root vertex r <ref type="bibr">[j, i, e]</ref>, and consists of a tree of height 2.</p><note type="other">The list assigned to this root vertex contains two colors: σ[j, i] and σ [j, i]. The root vertex has Z 1 + 1 children, and each of these is also assigned the two-element list containing the colors σ[j, i] and σ [j, i]. One of the children vertices is distinguished, and has 2k groups of further children: -e[up] children assigned the list {σ [j, i], , [i, j]}. -e[down] children assigned the list {σ [j, i], ,[i, j]}. -For</note><p>each r in the range i &lt; r ≤ k, v <ref type="bibr">[up]</ref> children assigned the list {σ [j, i], τ j [i, r]}. -For each r in the range i &lt; r ≤ k, v <ref type="bibr">[down]</ref> children assigned {σ [j, i], τ j [i, r]}. -For each r in the range 1 ≤ r &lt; i, v <ref type="bibr">[down]</ref> children assigned {σ [j, i], τ j [r, i]}. -For each r in the range 1 ≤ r &lt; i, v <ref type="bibr">[up]</ref> children assigned the list {σ</p><note type="other">[j, i], τ j [r, i]}. The numerical targets. (1) Each color in T ∪ T has the target: Z 0 . (2) Each color in E ∪ E has the target: Z 0 . (3) Each color in S has the target: (M − 1)(Z 1 + 1) + 1. (4) Each color in S has the target: (M − 1) + (Z 1 + 1) + (k − 1)(M − 1)Z 0 .</note><p>That completes the formal description of the reduction from M ULTICOLOR CLIQUE to NLCP. We turn now to some motivating remarks about the design of the reduction. <ref type="figure">Remarks on the colors, their numerical targets, and their role in the reduction.   (1</ref>) There are 2 k</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2</head><p>groups of gadgets. Each edge of G gives rise to two gadgets. Between any two color classes of G there are precisely M edges, and therefore M · k</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2</head><p>edges in G in total. Each group of gadgets therefore contains M gadgets. The gadgets in each group have two "helper" colors. For example, the group of gadgets G <ref type="bibr">[4,</ref><ref type="bibr">2]</ref> has the helper colors σ <ref type="bibr">[4,</ref><ref type="bibr">2]</ref> and σ <ref type="bibr">[4,</ref><ref type="bibr">2]</ref>. The role of the gadgets in this group is to indicate a choice of an edge going from a vertex in the color class V <ref type="bibr">[4]</ref> of G to a vertex in the color class V <ref type="bibr">[2]</ref> of G. The role of the 2 k</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2</head><p>groups of gadgets is to represent the selection of k</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>2</head><p>edges of G that form a k-clique, with each edge chosen twice, once in each direction. If i &lt; j then the choice is represented by the coloring of the gadgets in the group G[i, j], and these are the forward gadgets of the edge choice. If j &lt; i, then the gadgets in G <ref type="bibr">[i, j]</ref> are backward gadgets (representing the edge selection in the opposite direction, relative to the ordering of the color classes of G). The numerical targets for the colors in S ∪ S are chosen to force exactly one edge to be selected (forward or backward) by each group of gadgets, and to force the gadgets that are colored in a way that indicates the edge was not selected into being colored in a particular way (else the numerical targets cannot be attained). The numerical targets for these colors are complicated, because of this role (which is asymmetric between the pair of colors σ[i, j <ref type="figure">] and σ  [i, j]).   (2</ref>) The colors in T ∪ T and E ∪ E are organized in symmetric pairs, and each pair is used to transmit (and check) information. Due to the enforcements alluded to above, each "selection" coloring of a gadget (there will be only one possible in each group of gadgets), will force some numbers of vertices to be colored with these pairs of colors, which can be thought of as an information transmission. For example, when a gadget in G <ref type="bibr">[4,</ref><ref type="bibr">2]</ref> is colored with a "selection" coloring, this indicates that the edge from which the gadget arises is selected as the edge from the color class V <ref type="bibr">[4]</ref> of G, to the color class V <ref type="bibr">[2]</ref>. There is a pair of colors that handles the information transmission concerning which edge is selected between the groups G <ref type="bibr">[2,</ref><ref type="bibr">4]</ref> and G <ref type="bibr">[4,</ref><ref type="bibr">2]</ref>. (Of course, something has to check that the edge selected in one direction, is the same as the edge selected in the other direction.) There is something neat about the dual-color transmission channel for this information. Each vertex and edge has two unique identification numbers, "up" and "down", that sum to Z 0 . To continue the concrete example, G <ref type="bibr">[4,</ref><ref type="bibr">2]</ref>   <ref type="bibr">[down]</ref> vertices colored <ref type="bibr">[2,</ref><ref type="bibr">4]</ref>. The signal from the other side consists of e <ref type="bibr">[down]</ref> vertices colored <ref type="bibr">[2,</ref><ref type="bibr">4]</ref> and e <ref type="bibr">[up]</ref> vertices colored <ref type="bibr">[2,</ref><ref type="bibr">4]</ref>. Thus the numerical targets for these colors allow us to check whether the same edge has been selected in each direction (if each color target of Z 0 is met). There is the additional advantage that the amount of signal in each direction is the same: in each direction a total of Z 0 colored vertices, with the two paired colors, constitutes the signal.  <ref type="figure">targets.  (3</ref>) In a similar manner to the communication task discussed above, each of the k − 1 groups of gadgets G <ref type="bibr">[i, ]</ref> need to check that each has selected an edge from V <ref type="bibr">[i]</ref> that originates at the same vertex in V <ref type="bibr">[i]</ref>. Hence there are pairs of colors that provide a communication channel similar to that in (2) for this information. This role is played by the colors in T ∪ T . (Because of the bookkeeping issues, this becomes somewhat intricate in the formal definition of the reduction.)</p><p>The above remarks are intended to aid an intuitive understanding of the reduction. We now return to a more formal argument. Claim 1. If G has a k-multicolor clique, then G is a yes-instance to NLCP. The proof of this claim is relatively straightforward. The gadgets corresponding to the edges of a k-clique in G are colored in a manner that indicates "selected" (for both the forward and the backward gadgets) and all other gadgets are colored in manner that indicates "non-selected". The coloring that corresponds to "selected" colors the root vertex with the color σ <ref type="bibr">[i, j]</ref>, and this forces the rest of the coloring of the gadget. The coloring that corresponds to "non-selected" colors the root vertex with the color σ [i, j]. In this case the coloring of the rest of the gadget is not entirely forced, but if the grandchildren vertices of the gadget are also colored with σ <ref type="bibr">[i, j]</ref>, then all the numerical targets will be met. Claim 2. Suppose that Γ is a list coloring of G that meets all the numerical targets. Then in each group of gadgets, exactly one gadget is colored in a way that indicates "selection".</p><p>We argue this as follows. There cannot be two gadgets in any group colored in the "selection" manner, since this would make it impossible to meet the numerical target for a color in S. If no gadget is colored in the "selection" manner, then again the targets cannot be met for the colors in S ∪ S used in the lists for this group of gadgets.</p><p>Claim 3. Suppose that Γ is a list coloring of G that meets all the numerical targets. Then in each group of gadgets, every gadget that is not colored in a way that indicates "selection" must have all of its grandchildren vertices colored with the appropriate color in S . Claim 3 follows from Claim 2, noting that the numerical targets for the S colors cannot be met unless this is so.</p><p>It follows from Claims 2 and 3, that if Γ is a list coloring of G that meets all the numerical targets, then in each group of gadgets, exactly one gadget is colored in the "selection" manner, and all other gadgets are colored in a completely determined "nonselection" manner. Each "selection" coloring of a gadget produces a numerical signal (based on vertex and edge identification numbers) carried by the colors in T ∪T and E ∪ E , with two signals per color. The target of Z 0 for these colors can only be achieved if the selection colorings indicate a clique in G.</p><p>Theorem 4. NLCP is W <ref type="bibr">[1]</ref>-hard for trees, parameterized by the number of colors that appear on the lists.</p><p>The reduction from NLCP to LECP is almost trivial, achieved by padding with isolated vertices having single-color lists.</p><p>The reduction from LECP to ECP is described as follows. Create a clique of size r, the number of colors occuring on the lists, and connect the vertices of this clique to the vertices of G in a manner that enforces the lists. Since G is a tree, the treewidth of the resulting graph is at most r. We have <ref type="figure">:   Theorem 5</ref>. EQUITABLE COLORING is W <ref type="bibr">[1]</ref>-hard, parameterized by treewidth.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Discussion and Open Problems</head><p>Structured optimization problems, such as the coloring problems considered here, have strong claims with respect to applications. A source of discussion of these applications is the recent dissertation of Marx <ref type="bibr">[Ma04]</ref>. It seems interesting and fruitful to consider such problems from the parameterized point of view, and to investigate how such extra problem structure (which tends to increase both computational complexity, and real- world applicability) interacts with parameterizations (such as bounded treewidth), that frequently lead to tractability.</p><p>The outcome of the investigation here of some well-known locally and globally constrained coloring problems has turned up a few surprises: first of all, that the L IST CHROMATIC NUMBER problem is actually FPT, when we parameterize by treewidth. It is also somewhat surprising that this good news does not extend to L IST COLORING, PRECOLORING EXTENSION or EQUITABLE COLORING, all of which turn out to be hard for W <ref type="bibr">[1]</ref>.</p><p>There are many interesting open problems concerning the parameterized complex- ity of "more structured" combinatorial optimization problems on graphs, parametered by treewidth. We mention the following two: <ref type="bibr">(1)</ref> Is the LIST EDGE CHROMATIC NUMBER problem fixed-parameter tractable, pa- rameterized by treewidth? <ref type="bibr">(2)</ref> One can formulate a "list analogue" of the HAMILTONIAN PATH problem as fol- lows: each vertex is assigned a list that is a subset of {1, 2, ..., n}indicating the positions in the ordering of the n vertices implicit in a Hamiltonian path that are permitted to the vertex. Is the LIST HAMILTONIAN PATH problem FPT, parameterized by treewidth? <ref type="bibr">[Al00]</ref> N. Alon. Restricted colorings of graphs. In:  <ref type="bibr">[BF05]</ref> H. L. Bodlaender and F. V. Fomin. Equitable colorings of bounded treewidth graphs.  <ref type="bibr">[BFLRRW06]</ref> H. L. Bodlaender, M. Fellows, M. Langston, M. A. Ragan, F. Rosamond and M.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>References</head><p>Weyer. Quadratic kernelization for convex recoloring of trees. Proceedings COCOON 2007, Springer-Verlag, Lecture Notes in Computer Science , 2007, to appear. <ref type="bibr">[BPT92]</ref> R. B. Borie, R. G. Parker and C. A. Tovey. Automatic generation of linear-time al- gorithms from predicate calculus descriptions of problems on recursively generated graph families.  <ref type="bibr">[DF99]</ref> R. G. Downey and M. R. Fellows. Parameterized Complexity. Springer-Verlag, 1999. <ref type="bibr">[ERT80]</ref> P. Erdös, A. L. Rubin and H. Taylor. Choosability in graphs. Congressus  <ref type="bibr">[FG06]</ref> J. Flum and M. Grohe, Parameterized Complexity Theory, Springer-Verlag, 2006. <ref type="bibr">[FGKPRWY07]</ref> M. Fellows, P. Giannopoulos, C. Knauer, C. Paul, F. Rosamond, S. Whitesides and N. Yu. The lawnmower and other problems: applications of MSO logic in geometry. Manuscript, 2007. <ref type="bibr">[FHR07]</ref> M. Fellows, D. Hermelin and F. Rosamond. On the fixed-parameter intractability and tractability of multiple-interval graph properties. Manuscript, 2007. <ref type="bibr">[JS97]</ref> K. Jansen and P. Scheffler. Generalized colorings for tree-like graphs. Discrete Applied  <ref type="bibr">[JT95]</ref> T. R. Jensen and B. Toft. Graph Coloring Problems . Wiley Interscience, 1995. <ref type="bibr">[KPW03]</ref> A. V. Kostochka, M. J. Pelsmajer and D. B. West. A list analogue of equitable coloring.</p><p>Journal of Graph  <ref type="bibr">[KTV98]</ref> J. Kratochvil, Z. Tuza and M. Voigt. New trends in the theory of graph colorings: choosability and list coloring. In: Contemporary  <ref type="bibr">[Ma04]</ref> D. Marx. Graph coloring with local and global constraints. Ph.D. dissertation, Depart- ment of Computer Science and Information Theory, Budapest University of Technology and Economics, 2004. <ref type="bibr">[Mey73]</ref> W. Meyer. Equitable coloring. American Mathematical Monthly 80 <ref type="figure">(1973), 920-922</ref>. <ref type="bibr">[Nie06]</ref> R. Niedermeier. Invitation to Fixed Parameter Algorithms. Oxford University Press, 2006. <ref type="bibr">[Th94]</ref> C. Thomassen. Every planar graph is 5-choosable. J.  <ref type="bibr">[Viz76]</ref> V. G. Vizing. Coloring the vertices of a graph in prescribed colors. Metody Diskret. Anal. v Teorii Kodov i <ref type="figure">Schem 29 (1976), 3-10</ref>. (In Russian.) <ref type="bibr">[Wo01]</ref> D. R. Woodall. List colourings of graphs, in: Surveys in Combinatorics 2001 (J. W. P.</p><p>Hirschfeld, ed.) London Math. Soc. Lecture Notes </p></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>T = T (α)</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><head>Lemma 1 . If a graph of treewidth at most t admits any bad r</head><label>Lemma 1</label><figDesc></figDesc><table>-list assignment, then it 
admits a bad list assignment where the colors are drawn from a set of (2t + 1)r colors. 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="false"><head>Claim 1 .</head><label>Claim 1</label><figDesc></figDesc><table>If c 
is a proper coloring of G, and L is a bad list assignment for G, then L 
[c 
] 
is also a bad list assignment for G. 
</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2" validated="false"><head>Claim 2 . The graph</head><label>Claim 2</label><figDesc></figDesc><table>G has treewidth at most 2(t + 1)r − 1. 
A tree decomposition D 
for G of width at most 2(t + 1)r can be described as 
follows. Subdivide each edge tt 
</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3" validated="false"><head>Theorem 1 . The LIST CHROMATIC NUMBER problem, parameterized by the treewidth bound t, is fixed-parameter tractable, solvable in linear time for every fixed t.</head><label>Theorem 1</label><figDesc></figDesc><table></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_6" validated="false"><head>uses the (number</head><label></label><figDesc></figDesc><table>of vertices colored by the) pair of colors [2, 4] and 
[2, 4] to communicate to G[2, 4] 
about the edge selected. The signal from one side consists of e[up] vertices colored 
[2, 4] and e</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_7" validated="false"><head>This means that, modulo the discussion in (1) above, when an edge is not selected, the corresponding non</head><label></label><figDesc></figDesc><table>-selection 
coloring involves uniformly the same number (i.e., Z 0 ) of vertices colored "otherwise" 
for each of the (M − 1) gadgets colored in the non-selection way: this explains (part 
of) the (k − 1)(M − 1)Z 0 term in (4) of the numerical </table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_8" validated="false"><head>Surveys in Combinatorics 1993 (K.</head><label></label><figDesc></figDesc><table>Walker, 
ed.), London Math. Soc. Lecture Notes Series 187 (Cambridge Univ. Press, 1993), 1-33. [ALS91] S. Arnborg, J. Lagergren and D. Seese. Easy problems for tree-decomposable graphs. 
J. Algorithms 12 (1991), 308-340. 
</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_15" validated="false"><head>Combinatorial Theory</head><label>Combinatorial Theory</label><figDesc></figDesc><table>Ser. B 62 
(1994), 180-181. 
[Tu97] Z. Tuza. Graph colorings with local constraints -A survey. Discussiones Mathematicae 
-Graph Theory 17 (1997), 161-228. 
</table></figure>
		</body>
		<back>
			<div type="references">

				<listBibl/>
			</div>
		</back>
	</text>
</TEI>
