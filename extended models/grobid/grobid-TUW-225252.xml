<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 C:\Users\Angela\git\grobid\grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.4.5-dummy" ident="GROBID" when="2017-12-29T00:16+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">Reconstructing Cross Cut Shredded Documents with a Genetic Algorithm with Solution Archive</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<title level="a" type="main">Reconstructing Cross Cut Shredded Documents with a Genetic Algorithm with Solution Archive</title>
					</analytic>
					<monogr>
						<imprint>
							<date/>
						</imprint>
					</monogr>
					<note>Benjamin Biesinger, Christian Schauer, Bin Hu, and Günther R. Raidl</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>Institute of Computer Graphics and Algorithms Vienna University of Technology Favoritenstrae 911/1861</term>
					<term>1040 Vienna</term>
					<term>Austria {biesinger|schauer|hu|raidl}@adstuwienacat 1 Introduction</term>
				</keywords>
			</textClass>
			<abstract>
				<p>The reconstruction of shredded documents is of high interest not only in forensic science but also when documents are destroyed unintentionally. Reconstructing cross-cut shredded documents (RCCSTD) is particularly difficult since the documents are cut into rectangular pieces of equal size. Since shape information along the edges-in contrast to hand torn pieces-cannot be exploited, the reconstruction solely depends on the information written on the shreds. Therefore, we use a metric for calculating the number of gray value mismatches along the edges of two shreds put next to each other either horizontally or vertically. Consequentially, we model the document reconstruction as a combinatorial optimization problem minimizing the overall mismatch of the reconstructed document. Since we focus in this work on the combinatorial aspect of the problem we use this simple metric which can be replaced in future work by more advanced pattern recognition techniques, see [2] for a sample method. In previous work, Prandtstetter and Raidl [3] developed an Ant Colony Optimization and a Variable Neighborhood Search (VNS) for the RCCSTD, while Schauer et al. [5] proposed a Memetic Algorithm (MA). Sleit et al. [6] proposed a different approach by iteratively merging two clusters that fit together well and repairing possibly occurring conflicts. In this work the MA from [5] is adapted and extended by a complete solution archive in order to avoid duplicate solutions by efficiently storing all visited solutions in a special data structure. If a duplicate solution is detected it is converted into a similar yet unconsidered one. This is done to preserve the diversity of the population and to avoid unnecessary re-evaluations of already visited solutions. This approach is a rather new method for duplicate detection and conversion which was successfully applied on several binary problems (e.g., MAX-SAT) in [4] as well as on the generalized minimum spanning tree problem [1]. 2 A Genetic Algorithm with Solution Archive For a detailed description of the GA and its operators, which is extended by our solution archive, see [5]. To encode solutions the authors used an n×n array that</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">Results and Conclusions</head><p>We tested the proposed algorithm on several benchmark instances using different cutting patterns and compared the GA with and without the solution archive. By using the indexed trie as data structure, the memory consumption increased clearly too strongly after a relatively small number of iterations. Therefore the GA had to stop when it ran out of memory instead of when it converged, which produced worse results than the GA without archive. The linked trie variant, without causing additional run-time, consumed only one fourth of the memory. Unfortunately, even with this improvement the preliminary results were only on par with those generated by the GA without archive when using the same amount of time as stopping criterion. The reason is that the solution archive in this case is not able to fully compensate its overhead by saving the effort for re-evaluating duplicate solutions. However, when using a fixed number of iterations, the results of the GA with archive were better by far.</p><p>We conclude that on combinatorial optimization problems where the solution representation is not compact, using a solution archive with linked trie resultsReferences 1. Hu, B., Raidl, G.R.: An evolutionary algorithm with solution archives and bounding extension for the generalized minimum spanning tree problem. In: Proceedings of the 14th Annual Conference on Genetic and Evolutionary Computation (GECCO). pp. 393-400. ACM Press, Philadelphia, PA, USA (2012) 2. Perl, J., Diem, M., Kleber, F., Sablatnig, R.: Strip shredded document reconstruc- tion using optical character recognition. In: 4th International Conference on Imaging for Crime Detection and </p></div>		</body>
		<back>
			<div type="references">

				<listBibl/>
			</div>
		</back>
	</text>
</TEI>
