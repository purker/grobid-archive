<Publication>
  <id>TUW-256654</id>
  <title></title>
  <note>Sections M. Anton Ertl *</note>
  <abstractText>A section is a contiguous region of memory, to which data or code can be appended (like the Forth dictionary). Assembly languages and linkers have supported multiple sections for a long time. This paper describes the benefits of supporting multiple sections in Forth, interfaces and implementation techniques. â€¢ You put B in allocated memory. Unfortunately , that usually means that B does not survive a savesystem, and it&apos;s also cumbersome if B is a growable structure. 1 Introduction A section is a contiguous memory area, to which new data can be appended at the end; the Forth dictionary is a section. Assemblers and linkers have supported multiple sections or segments for many decades [Lev00]. In contrast, Forth traditionally has had only one section; some systems have had separated headers (another section), and cross-compilers have uninitialized memory for buffer:, but by and large, Forth systems have made do with just one section: the dictionary. With multiple sections, each section has it&apos;s own start, dictionary pointer (what here reads), and end (used in unused, but otherwise not used much). This paper presents various uses of sections and why they are better than the current workarounds (Section 2), presents a programming interface (Sec-tion 3), and discusses various implementation approaches (Section 4).</abstractText>
  <keywords/>
  <authors>
    <Author>
      <firstNames>
        <string>T</string>
        <string>U</string>
      </firstNames>
      <lastName>Wien</lastName>
      <affiliations/>
    </Author>
  </authors>
  <affiliations/>
  <sections>
    <Section>
      <level>2</level>
      <title>Uses</title>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <level>2.1</level>
      <title>Nested structures</title>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <level>2.3</level>
      <title>Further uses</title>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <level>3</level>
      <title>Progamming interface</title>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <level>0</level>
      <title>value x</title>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <level>4</level>
      <title>Implementation</title>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <title>References</title>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <level>5</level>
      <title>Conclusion</title>
      <referenceIds/>
      <referenceCitations/>
    </Section>
  </sections>
  <citationContexts/>
  <references/>
</Publication>