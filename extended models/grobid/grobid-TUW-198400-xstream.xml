<Publication>
  <id>TUW-198400</id>
  <title>Model-driven Development Meets Security: An Evaluation of Current Approaches</title>
  <abstractText>Although our society is critically dependent on software systems, these systems are mainly secured by protection mechanisms during operation instead of considering security issues during software design. Deficiencies in software design are the main reasons for security incidents, resulting in severe economic consequences for (i) the organizations using the software and (ii) the development companies. Lately, model-driven development has been proposed in order to increase the quality and thereby the security of software systems. This paper evaluates current efforts that position security as a fundamental element in model-driven development, highlights their deficiencies and identifies current research challenges. The evaluation shows that applying special-purpose methods to particular aspects of the problem is more suitable than applying generic ones, since (i) the problem can be represented on the proper abstraction level, (ii) the user can build on the knowledge of experts, and (iii) the available tools are more efficient and powerful. 1. Introduction As our modern society is critically dependent on software systems, the importance of software security is constantly growing [1]. For example, companies depend on applications to administer customer data, payment information and inventory tracking. But not only companies have a need for secure software: consumers also use software to communicate with friends or family, to check their banking accounts and to search for resources available on the Internet. Threats resulting from security breaches range from defeating copy protection mechanisms to attacks such as malicious intrusions into systems that control crucial infrastructure (cf. [2]). Software vulnerabilities, arising from deficiencies in the design or implementation of the software (e.g., due to increasing complexity) are one of the main reasons for security incidents (cf. [3]). These deficiencies are often caused by the increasing complexity of software systems. This is addressed with principles like abstraction, modularization, and separation of concerns, concepts which are all widely used. Although the object-oriented paradigm is mostly employed nowadays, principles like encapsulation, polymorphism, and inheritance are insufficient, and a paradigm change is necessary [4]. For this reason, as a successor of the computer-aided software engineering (CASE) approach, model-driven development (MDD) has been suggested to improve the quality of complex software systems [4], [5]. MDD is used to design abstractions, i.e., platform-independent concepts, which are then translated into more accurate ones that are adjusted to a particular platform. In a further step, such platform-specific models are transformed into production code. In such a development process, models and mappings between them have to be maintained instead of just the generated code. Aspect-oriented software development (AOSD) is an emerging approach with the goal of promoting advanced separation of concerns (cf. [6], [7]). It allows multiple concerns (e.g., security, functionality) to be expressed separately and unifies them into a working system in an automated way. Because of good characteristics in tackling software complexity, model-driven engineering was utilized to develop secure information systems. Juerjens was the first to propose a combination of model-driven development and security using UMLsec (cf. [8]). Subsequently, many proposals dealing with integrating security and modeling languages followed and were summarized under the term model-driven security (cf. [9]). It represents an approach where security is applied together with model-driven architecture [4] and focuses on building secure software systems by specifying models together with their security requirements. At the other end of the spectrum, researchers have proposed formal languages, called specification languages, to represent policies, models, and system descriptions. Such languages are based on mathematical logic systems and have also been applied to the field of information security, for instance for specifying formal security policies and for analyzing cryptographic security protocols [10]. A great number of modeling and specification approaches for describing secure information systems are available, and the question arises which method to use for which problem. When intending to apply model-driven security, or at least to</abstractText>
  <keywords/>
  <authors/>
  <affiliations/>
  <sections>
    <Section>
      <level>2.</level>
      <title>The Evaluation Taxonomy</title>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <level>2.</level>
      <title>Model-driven Security Approaches</title>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <level>2.1.</level>
      <title>UMLsec (Juerjens 2002)</title>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <title>interference</title>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <level>2.2.</level>
      <title>Secure Software Architectures by Using</title>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <level>2.4.</level>
      <title>Automated Validation of Internet Security Protocols and Applications</title>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <level>2.3.</level>
      <title>A Model-Based Aspect-Oriented Framework for Building Intrusion-Aware Software Systems</title>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <level>2.4.</level>
      <title>Alloy</title>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <level>2.5.</level>
      <title>Symbolic Model Verifier</title>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <level>3.</level>
      <title>Evaluation of Model-driven Security Approaches</title>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <title>Dimension</title>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <title>AVISPA SMV Alloy</title>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <title>Paradigm</title>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <level>5.</level>
      <title>Conclusion</title>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <title>References</title>
      <referenceIds/>
      <referenceCitations/>
    </Section>
    <Section>
      <title>Acknowledgments</title>
      <referenceIds/>
      <referenceCitations/>
    </Section>
  </sections>
  <citationContexts/>
  <references/>
</Publication>