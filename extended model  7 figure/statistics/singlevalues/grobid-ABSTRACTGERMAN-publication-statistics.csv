"path";"PDF";"original";"extracted";"original value";"extracted value";"Precision";"Recall";"F1"
"TUW-137078";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-137078.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-137078-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-137078-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-138011";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-138011.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-138011-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-138011-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-138447";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-138447.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-138447-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-138447-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-138544";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-138544.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-138544-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-138544-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-138547";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-138547.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-138547-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-138547-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-139299";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-139299.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-139299-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-139299-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-139761";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-139761.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-139761-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-139761-xstream.xml"")";"Diese Diplomarbeit beschreibt, wie Optionen mit Hilfe Genetischer Programmierung bewertet werden können. Das zugrunde liegende Modell nennt sich GARCH (Generalized Autoregressive Conditional Heteroskedastic) Renditeprozess. Das Ziel dieser Diplomarbeit ist eine geschlossene Formel, die als Ergebnis den Preis einer europäischen Kaufoption liefert, dessen dahinter liegende Wertpapier einem GARCH Prozess folgt. Die Daten werden innerhalb eines breiten Wertebereiches simuliert, um die meisten existierenden Optionen mit einer Formel bewerten zu können. Die Formel wird mittels Genetischer Programmierung aus den Daten generiert. Genetische Programmierung ist eine Methode, bei der nur durch Definition einer zum Problem passenden Bewertungsfunktion vollständige Programme produziert werden können. Die Ergebnisgleichung wird schließlich mittels eines der Evolution ähnlichen Algorithmus gefunden. Drei verschiedene Methoden zum Bloat Control wurden ver-wendet. Zusätzlich wurden auch Automatisch Definierte Funktionen sowie ein hybrider Ansatz untersucht. Um sicherzustellen, dass eine gute Konfiguration gewählt wird, gibt es Vortests vieler verschiedener Konfigurationen. Es zeigt sich, dass in diesem Umfeld einfachere Konfigurationen erfolgreicher sind. Die Ergebnisgleichung kann schließlich zur Errechnung der Optionspreise mit min-imalem Fehler verwendet werden. Diese Gleichung verhält sich gut und kann auch in Standardtabellenkalkulationen verwendet werden. Im Vergleich mit anderen existierenden Ansätzen, bietet diese Gleichung eine weitere Verwendbarkeit beziehungsweise eine höhere Genauigkeit.";;"none extracted value";"0,00";"0,00"
"TUW-139769";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-139769.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-139769-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-139769-xstream.xml"")";"Diese Diplomarbeit beschäftigt sich mit Local Branching, einem lokalen Suchalgorithmus, der auf einem Branch and Cut Algorithmus für ganzzahlige Optimierungsprobleme aufsetzt. Local Branching definiert beliebig große Nachbarschaften um gegebene gültige Lösungen und löst diese teilweise oder komplett, bevor der Rest des Lösungsraums durchsucht wird. Das Ziel ist eine Verbesserung des heuristischen Verhaltens des gegebenen Solvers für ganzzahlige Optimierungsprobleme, d.h. sich auf das möglichst frühe Finden guter Lösungen zu konzentrieren. Local Branching ist als Erweiterung des Open Source Branch and Cut Solvers COIN/BCP implementiert. Das Hauptziel des Frameworks ist eine generische Implementierung von Local Branching für ganzzahlige Optimierungsprobleme, also Probleme, bei denen alle oder einige Variablen ganzzahlig sein müssen, und zusätzlich eine oder mehrere (lineare) Bedingungen in Form von Ungleichungen erfüllen müssen. Es wurden mehrere Erweiterungen zum Framework hinzugefügt: die pseudo-parallele Abarbeitung mehrerer lokaler Suchbäume, das vorzeitige Terminieren lokaler Suchbäume sowie eine unabhängige Variablen-Fixing-Heuristik. Durch diese Erweiterungen können die Parameter für Local Branching im Laufe der Berechnung beliebig verändert werden. Ein wesentliches Ziel beim Entwurf des Frameworks war eine klare Kapselung des Local Branching Algorithmus, um die Einbettung in andere, höhere Suchalgorithmen zu ermöglichen, etwa in evolutionäre Algorithmen. Als Beispielapplikation wurde ein Solver für das mehrdimensionale Rucksackproblem implementiert. Eine eigene Local Branching Metaheuristik beschränkt die Größe lokaler Bäume durch Knotenlimits und kann den Suchraum durch Anwendung der Variablen-Fixing-Heuristik weiter einschränken. Die Testergebnisse zeigen signifikante Vorteile für Local Branching im Vergleich zum normalen Branch and Cut Algorithmus. Vor allem für große, komplexe Testinstanzen liefert die Suche in lokalen Bäumen oft bessere Resultate am Anfang der Berechnung. Dadurch wird auch die Zeit zum Finden (und Beweisen) der optimalen Lösung potentiell verringert, da dadurch früher zusätzliche Teile des Suchbaums weggeschnitten werden können.";;"none extracted value";"0,00";"0,00"
"TUW-139781";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-139781.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-139781-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-139781-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-139785";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-139785.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-139785-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-139785-xstream.xml"")";"In dieser Diplomarbeit wird eine generische Bibliothek von effizienten Metaheuristiken für kombinatorische Optimierungsprobleme vorgestellt. In der vorliegenden Eine generische Implementierung bietet vorallem den Vorteil das bei einem neuen zu lösendem Problem nur einige bestimmte problemabhängige Klassen und Methoden realisiert werden müssen ohne sich schon im Vorhinein einen speziellen Algorithmus festzulegen, da diese Klassen und Methoden von allen in der EAlib vorhanden Metaheuristiken verwendet werden. Die Vorteile dieser Bibliothek werden anschließend anhand des Quadratic Assignment Problems ausführlich dargestellt. Dieses Beispiel dient zusätzlich auch noch als kommentierte Referenz für zukünftige Problemimplentierungen. Abschließend werden die Resulate der Experimente mit den verschiedenen Metaheuristiken präsentiert.";;"none extracted value";"0,00";"0,00"
"TUW-140047";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-140047.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-140047-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-140047-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-140048";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-140048.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-140048-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-140048-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-140229";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-140229.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-140229-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-140229-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-140253";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-140253.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-140253-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-140253-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-140308";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-140308.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-140308-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-140308-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-140533";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-140533.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-140533-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-140533-xstream.xml"")";"Formale Spezifikation und Verifikation sind durch die durch kontinuierliche Weiterentwicklung in letzter Zeit an einem Punkt angelangt, wo Programme beinahe automatisch verifiziert werden können. Das Ziel dieser Magisterarbeit ist es, sowohl kommerzielle als auch für wissenschaftliche Zwecke entwickelte Verifikationsprogramme zu testen. Der Hauptaugenmerk liegt auf dem Nutzen dieser Werkzeuge in der Software- Entwicklung und in der Lehre. Hierzu wird diese Magisterarbeit die theoretischen Grundlagen vorstellen und auf die verschiedenen Fähigkeiten und Eigenheiten der ausgewählten Werkzeuge eingehen. Die theoretischen Grundlagen behandeln einerseits Ansätze, die für die formale Verifikation gebraucht werden, andererseits wird die Funktionsweise der ausgewählten Werkzeuge erklärt. Die begutachteten Programme sind der Frege Program Prover, KeY, Perfect Developer und das Prototype Verification System. Die Beispiele, mit denen diese Werkzeuge getestet werden, sind typische Problemstellung der Informatik. Bei der Evaluation wird auf den ganzen Ablauf beim Einsatz dieser Werkzeuge eingegangen und nicht nur auf das Endergebnis.";;"none extracted value";"0,00";"0,00"
"TUW-140867";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-140867.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-140867-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-140867-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-140895";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-140895.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-140895-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-140895-xstream.xml"")";"Im Rahmen dieser Magisterarbeit wurde ein Ant Colony Optimisation Algorithmus für das durchmesserbeschränkte minimale Spannbaum Problem erarbeitet. Bei diesem Problem handelt es sich um ein N P-schweres kombinatorisches Optimierungsproblem mit zahl-reichen praktischen Anwendungsgebieten, zum Beispiel im Netzwerkdesign. Der Algorith-mus wurde mit einer lokalen Optimierungsheuristik, nämlich einem Variable Neighbourhood Descent, erweitert. Diese lokale Optimierungsheuristik arbeitet auf vier verschiedenen Nachbarschaftsstrukturen, bei deren Entwicklung besonders auf eine effiziente Evaluierung der Nachbarschaft einer Lösung Wert gelegt wurde. Vergleiche mit verschiedenen evolu-tionären Algorithmen und einer variablen Nachbarschaftssuche auf euklidischen Instanzen bis zu 1000 Knoten hinsichtlich Lösungsqualität als auch Berechnungszeit zeigen, dass der Ant Colony Optimisation Algorithmus bei ausreichend Zeit die bisher besten bekan-nten Ergebnisse zum Teil deutlichübertreffendeutlich¨deutlichübertreffen kann, hingegen bei Testläufen mit starker Zeitbeschränkung nicht die Lösungsqualität der variablen Nachbarschaftssuche erreichen kann.";;"none extracted value";"0,00";"0,00"
"TUW-140983";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-140983.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-140983-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-140983-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-141024";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-141024.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-141024-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-141024-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-141065";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-141065.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-141065-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-141065-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-141121";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-141121.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-141121-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-141121-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-141140";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-141140.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-141140-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-141140-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-141336";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-141336.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-141336-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-141336-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-141618";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-141618.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-141618-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-141618-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-141758";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-141758.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-141758-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-141758-xstream.xml"")";"Medizinische Daten werden in der Regel in natürlicher Sprache abgespeichert. Dies liegt daran, dass medizinisches Personal im Normalfall keine Rücksicht auf eine spätere Verarbeitung in automatisierten Systemen nimmt. Die Informationen sind daher nicht sofort für eine Verarbeitung mit Computern verfügbar. Aus diesem Grund wurden vielfach Anstrengungen unternommen, um die Daten in ein für Computer verarbeitbares Format überzuführen. Dieser Umstand gilt auch für medizinische Leitlinien (sogenannte Clinical Practice Guidelines (CPGs)). Sie sind, wie alle medizinischen Dokumente, ebenfalls in natürlicher Sprache verfaßt, ohne Rücksichtnahme auf eine computergestützte Verarbeitbarkeit. Die Einführung von medizinischen Leitlinien im klinischen Umfeld macht allerdings eine automatisierte Verarbeitung wünschenswert. In diesem Zusammenhang muß weiters beachtet werden, dass ein großer Teil der Information in medizinischen Leitlinien in negierter Form vorhanden ist. Die Tatsache, dass diese negiert vorliegt, macht sie aber deswegen nicht irrelevant oder weniger beachtenswert. Im Gegenteil, oftmals werden auf diese Art und Weise ungeeignete Behandlungsverfahren gekennzeichnet, beziehungsweise Behandlungen, die bei gegebenen physiologischen Zuständen nicht durchgeführt werden sollen oder dürfen. Solche Informationen können den Behandelnden helfen, die richtigen Therapieverfahren anzuwenden oder auch gewisse Verfahren abzulehnen. Dementsprechend ist die Erfassung von Negationen (die sogenannte Negation Detection) in medizinischen Leitlinien ein essentieller Bestandteil für die automatisierte Weiterverarbeitung dieser Art von medizinischen Dokumenten. Entscheidungsprozesse werden somit beschleunigt und dies wirkt sich positiv auf die Behandlung der Patienten aus. Um diese Aufgabe zu lösen haben wir Algorithmen entwickelt, die das Auffinden von Negationen in medizinischen Leitlinien ermöglichen sollen. Dazu benutzen wir syntaktische Verfahren, die die englische Grammatik gezielt ausnützen, um aufgetretene Negationen exakt aufzuspüren. Unsere gewonnenen Resultate zeigen, dass die Verwendung syntaktischer Methoden dabei hilft, die Identifikation von Negationen zu verbessern, wobei unsere Methoden nicht nur auf medizinische Dokumente, sondern auf jede Art von natürlichsprachlichem Text anwendbar sind.";;"none extracted value";"0,00";"0,00"
"TUW-168222";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-168222.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-168222-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-168222-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-168482";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-168482.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-168482-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-168482-xstream.xml"")";"Zusammenfassung Formale Dialogspiele werden schon seit langem dazu verwendet, die Semantik verschiedener Logiken zu charakterisieren. In den 70er Jahren präsentierte Robin Giles seinen Versuch, eine operationale Grundlage für formales Schließen zu definieren, basierend auf atomaren Experimenten, welche Dispersion aufweisen können. Diese Masterarbeit motiviert und beschreibt seinen Ansatz und die Verbindung zu t-Norm-basierten Fuzzy-Logiken. Wir geben eine kurze Einführung in t-Normen und mehrwertige Fuzzy-Logiken, die auf diese Bezug nehmen. Im Speziellen liegt der Schwerpunkt auf drei solchen fundamentalen Fuzzy-Logiken: Lukasiewicz-Logik, Gödel-Logik und Produkt-Logik. Verschiedene Möglichkeiten, die Spielregeln von Giles' Spiel zü andern, um dieses adäquat für Gödel-und Produkt-Logik zu machen, werden präsentiert und diskutiert. Darüber hinaus beschreiben wir die starke Verbindung zwischen Gewinnstrategien im Spiel und Ableitungen in einem analytischen Kalkül, der auf relationalen Hypersequenten basiert. Eine andere Art von Dialogspielen sind sogenannte ""Truth Comparison Games"". Diese sind besonders geeignet für Gödel-Logik, da sie der gradbasierten Semantik der Gödel-Logik mehr entsprechen als Giles' Spiel. Wir präsentieren das Spiel und diskutieren Gewinnstrate-gien für beide Spieler, welche als Beweis für die Gültigkeit oder Widerlegbarkeit einer Formel gesehen werden können. Zusätzlich werden mehrere Hilfsprogramme vorgestellt, die im Kontext dieser Master-arbeit entwickelt wurden. Darunter befindet sich auch eine webbasierte Anwendung zur interaktiven Exploration von Giles' Spiel und dessen Erweiterungen.";;"none extracted value";"0,00";"0,00"
"TUW-169511";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-169511.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-169511-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-169511-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-172697";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-172697.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-172697-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-172697-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-174216";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-174216.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-174216-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-174216-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-175428";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-175428.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-175428-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-175428-xstream.xml"")";"Im Rahmen dieser Arbeit wird eine konkrete Problemstellung aus dem Bereich der Lagerverwaltung behandelt. Dabei soll die benötigte Zeit zum Ausfassen von Artikeln aus dem Lager unter Berücksichtigung von domänenspezifischen Nebenbedingungen minimiert werden. Ausgehend von durch Kunden laufend aufgegebenen Bestellungen sollen feste Lieferzeiten eingehalten werden und Einschränkungen wie etwa Kapazit ätslimits oder das Vermeiden von Kollisionen zwischen Arbeitern beachtet werden. Die für die gegebene Problemstellung zentrale Bestimmung effizienter Touren steht im Mittelpunkt der Arbeit, welche mit Ergebnissen aus einer konkreten Implementierung des vorgestellten Ansatzes abschließt.
Es wird ein Algorithmus vorgestellt, der ein eigens entwickeltes Dynamisches Programm zur Berechnung optimaler Wege durch das Warenlager mit der Umsetzung einer Variablen Nachbarschaftssuche (engl.: Variable Neighborhood Search) (VNS) verbindet. In mehreren Phasen werden dabei die vorliegenden Bestellungen zerlegt und davon ausgehend Touren gebildet, welche zuletzt auf alle verfügbaren Lagerarbeiter verteilt werden. Innerhalb der VNS kommt eine Variante des Variable Neighborhood Descent (VND) als lokale Verbesserungskomponente zum Einsatz. Während über die definierten Nachbarschaftsstrukturen unterschiedliche potentielle Lösungen erzeugt werden, erfolgt deren Bewertung durch die Berechnung von konkreten Touren mittels eines für diesen Zweck entwickelten Dynamischen Programms. Dabei werden spezielle Eigenschaften der zugrundeliegenden Lagerstruktur ausgenutzt, um so in polynomieller Zeit die bestmögliche Wegführung durch das Lager berechnen zu können. Für die Zuordnung von Arbeitern zu den auf diese Weise berechneten Touren wird schließlich eine zusätzliche VNS verwendet, deren Aufgabe es ist, die notwendigen Touren derart zu verteilen, dass der letzte Artikel zum frühest möglichen Zeitpunkt ausgefasst werden kann.
Die anhand des implementierten Programms durchgeführten Tests zeigen, dass die erfolgte Tourenplanung wertvolle Ergebnisse liefert und die notwendige Rechenzeit niedrig gehalten werden kann. Getestet wurde mit Bezug auf eine Referenzlösung, welche auf Basis eines aus der Literatur entnommenen Ansatzes erzeugt werden konnte. Eine ausführliche Auswertung der Testergebnisse zeigte, dass die Anwendung des hier vorgestellten Ansatzes im Echtbetrieb als sehr vielversprechend gilt und erhebliche Einsparungen bezüglich der benötigten Arbeitszeit erreicht werden können. Insgesamt betrachtet wird ein effizientes und zielführendes Verfahren zur Lösung des vorliegenden Problems vorgestellt.";;"none extracted value";"0,00";"0,00"
"TUW-176087";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-176087.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-176087-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-176087-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-177140";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-177140.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-177140-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-177140-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-179146";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-179146.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-179146-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-179146-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-180162";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-180162.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-180162-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-180162-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-181199";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-181199.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-181199-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-181199-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-182414";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-182414.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-182414-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-182414-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-182899";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-182899.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-182899-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-182899-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-185321";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-185321.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-185321-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-185321-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-185441";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-185441.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-185441-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-185441-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-186227";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-186227.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-186227-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-186227-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-189842";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-189842.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-189842-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-189842-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-191715";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-191715.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-191715-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-191715-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-191977";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-191977.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-191977-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-191977-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-192724";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-192724.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-192724-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-192724-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-194085";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-194085.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-194085-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-194085-xstream.xml"")";"Topologie ist die mathematisch adäquate Art, um über Konvergenz zu sprechen. Distributed Computing ist das formale Studium von verteilten Systemen. Die Arbeit beschäftigt sich mit zwei Anwendungen der Topologie im Bereich des Distributed Computing: (1) Mengentheoretische Topologie und (2) algebraische Topologie.
Erstere wird verwendet, um die topologische Struktur von unendlichen Bäumen, die die Information über mögliche Ausführungen der Algorithmen subsumieren, zu untersuchen. Dieses Wissen wird verwendet, um einen einheitlichen Beweis der Unmöglichkeit von Distributed Consensus in mehreren Systemmodellen zu geben. Consensus ist das Einigen aller Prozesse des Systems auf einen einzigen Wert.
Zweitere wird verwendet, um die kombinatorische Struktur von Konfigurationen, also der Zusammenfassung aller lokaler Zustände der Prozesse, zu untersuchen. Hierbei wird eine Konfiguration als Simplex in einem Simplizialkomplex aufgefasst. Die topologische Unvereinbarkeit solcher Komplexe ermöglicht einen Beweis der Unmöglichkeit von k-Set Agreement in gewissen Systemen. Das ist eine Verallgemeinerung des Consensus-Problems: Es wird nicht mehr verlangt, dass sich die Prozesse auf nur einen Wert einigen, sondern es wird erlaubt, dass bis zu k unterschiedliche Werte auftreten.";;"none extracted value";"0,00";"0,00"
"TUW-194561";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-194561.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-194561-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-194561-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-194660";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-194660.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-194660-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-194660-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-197422";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-197422.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-197422-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-197422-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-197852";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-197852.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-197852-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-197852-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-198400";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-198400.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-198400-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-198400-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-198401";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-198401.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-198401-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-198401-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-198405";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-198405.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-198405-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-198405-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-198408";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-198408.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-198408-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-198408-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-200745";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-200745.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-200745-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-200745-xstream.xml"")";"In dieser Arbeit wird ein Algorithmus für das Generalized Minimum Spanning Tree-Problem (GMST) entwickelt. Beim GMST-Problem ist ein vollständiger Graph gegeben, bei dem die Knoten in Cluster partitioniert sind. Als Lösung wird ein Spannbaum gesucht, der von jedem Cluster genau einen Knoten beinhaltet und dessen Kosten minimal sind. Dieses Problem ist NP-schwierig. In dieser Arbeit wird eine Heuristik für dieses Problem entwickelt.

Bei diesem Verfahren wird ein Evolutionärer Algorithmus (EA) mit zwei ver-schiedenen Lösungsarchiven verwendet. Die Lösungsarchive werden dazu benutzt Lösungen zu speichern, um Duplikate zu erkennen und diese in neue Lösungen umzuwandeln. Das eine Lösungsarchiv beruht auf einer Kodierung, bei der die ausgewählten Knoten der Cluster einer Lösung gespeichert werden, während das andere Archiv auf einer Kodierung beruht, bei der gespeichert wird, welche Cluster in der Lösung verbunden sind.

Diese Archive werden in dieser Arbeit durch eine Bounding-Strategie basierend auf dem Branch and Bound Verfahren erweitert. Dabei wird versucht im Archiv an günstigen Positionen geeignete Bounds zu berechnen, die Auskunft darüber geben, wie gut die Lösungen in diesem Bereich des Archivs höchstens sein können. Wird eine Bound gefunden, die schlechter als die beste gefunden Lösung ist, sind diese Lösungen im weiteren Verlauf des Algorithmus uninteressant und werden nicht mehr berücksichtigt. Das führt dazu, dass mehrere Lösungen von vornherein als schlecht erkannt werden können und somit nur Lösungen verfolgt werden, die auch Verbesserungen bringen können.

Zusätzlich zu der Bounding-Strategie wird auch noch ein Nearest Neighbour Ansatz verwendet, bei dem beim Anhängen eines Clusters an den Spannbaum die n näch-sten Nachbarcluster bevorzugt werden.

Am Ende der Arbeit wurden Tests durchgeführt, bei denen die Bounding Strate-gie in den unterschiedlichen Archiven verwendet wurde. Diese Tests führten zu dem Ergebnis, dass die Bounding Strategie zu einer Verbesserung gegenüber den Archiven ohne Bounding Strategie führt. Der Vergleich zwischen den Archiven hat ergeben, dass die Pop-Variante bessere Ergebnisse liefert als die Gosh-Variante. Die Variante, in der beide Archive gleichzeitig verwendet werden, ist wiederum besser als die anderen beiden Varianten.";;"none extracted value";"0,00";"0,00"
"TUW-200748";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-200748.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-200748-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-200748-xstream.xml"")";"Das Rooted Delay-Constrained Steiner Tree Problem (RDCSTP) ist eine Variante des bekannten Steinerbaum-Problems auf einem Graphen in welcher die Pfade zu allen Zielknoten durch eine bestimmte maximale Verzögerung beschränkt sind. Das Problem tritt hauptsächlich im Bereich des Netzwerk-Routings beim Multicast auf, das heißt wenn Pakete von einer einzelnen Quelle zu einer bestimmten Untermenge der anderen Netzwerk-Teilnehmer gesendet werden sollen. Da das RDCSTP, wie das ursprüngliche Steiner-Problem, zur Klasse der N P-schwierigen Probleme gehört, ist es allgemein nicht möglich die exakte Lösung einer großen Probleminstanz in vertret-barer Zeit zu finden. Der Fokus der Forschung liegt daher großteils auf der Entwicklung guter Heuristiken, die auch bei großen Probleminstanzen in der Lage sind in vergleichbar kurzer Zeit zu möglichst guten Lösungen zu kommen.
In dieser Arbeit wird hierfür die Multilevel-Refinement-Heuristik  die bereits erfolgreich auf etliche andere Probleme, wie das Graph Partitioning Problem, angewandt wurde  als Ver-besserungsheuristik für das RDCSTP entwickelt. Grundsätzlich werden bei dieser Metaheuristik in einem ersten Schritt Knoten sukzessive zusammengefasst um den Graphen auf höheren ""Lev-els"", mit weniger Knoten, darzustellen. Das so vereinfachte Problem kann dann auf der höchsten Abstraktionsebene in simpler Weise gelöst werden. Dann wird diese Lösung schrittweise wieder soweit verfeinert, bis eine Lösung für das ursprüngliche Problem erreicht wird.
Der hier vorgestellte Algorithmus für das RDCSTP implementiert diesen Multilevel-Ansatz als Verbesserungsheuristik, die eine existierende Lösung iterativ verändert. Er wurde allerdings in einer Weise entworfen, die es ihm ebenso erlaubt eine Anfangslösung selbst zu generieren. Eine weitere Besonderheit ist, dass wegen der zusätzlichen Verzögerungs-Einschränkung wei-tere Datenstrukturen benötigt werden, um auf höheren Levels möglichst gültige Lösungen zu erzeugen. Außerdem wird während der Verfeinerung der Lösung auf jedem Level eine weite-re Verbesserungsheuristik angewandt, das Key Path Improvement, welches die Lösungsqualität drastisch verbessert.
Umfangreiche experimentelle Tests wurden durchgeführt um die Leistungsfähigkeit des Al-gorithmus bei großen Instanzen zu messen, und ihn mit anderen Algorithmen aus der Literatur zu vergleichen. Die hierbei erhaltenen Ergebnisse sind durchwegs sehr positiv und weisen somit darauf hin, dass der verfolgte Multilevel-Ansatz tatsächlich eine konkurrenzfähige Heuristik für das RDCSTP darstellt.";;"none extracted value";"0,00";"0,00"
"TUW-200948";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-200948.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-200948-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-200948-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-200950";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-200950.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-200950-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-200950-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-200959";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-200959.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-200959-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-200959-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-201066";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-201066.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-201066-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-201066-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-201160";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-201160.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-201160-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-201160-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-201167";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-201167.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-201167-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-201167-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-201821";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-201821.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-201821-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-201821-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-202034";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-202034.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-202034-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-202034-xstream.xml"")";"In dieser Diplomarbeit wird die Anwendung von Clusteringalgorithmen untersucht, um das Hierarchical Ring Network Problem (HRNP) zu lösen.
Wenn das Netzwerk als Graph repräsentiert ist, ist dieses NP-vollständige Problem wie folgt definiert: Gegeben ist Menge von Knoten welche jeweils einer von drei Schichten zugewiesen sind, und eine Kostenfunktion, welche die Verbindungskosten zwischen zwei Knoten (d.h. Kantenkosten) zuweist. Gesucht ist ein zusammenhängendes Netzwerk mit minimalen Gesamtkosten, wobei dieses bestimmte Struktureigenschaften zu erfüllen hat, welche im Detail in der Diplomarbeit beschrieben werden. Die wichtigste dieser Eigenschaften ist, dass Knoten gemäß einer hierarchischen Struktur zu größenbeschränkten Ringen verbunden werden.
Ringstrukturen sind ein guter Kompromiss zwischen der Verfügbarkeit von Netzwerken und deren Herstellungskosten. Die Verfügbarkeit ist gewährleistet, solange maximal ein Knoten pro Ring ausfällt.
Die grundlegende Idee dieser Diplomarbeit um dieses Netzwerkdesign-Problem zu lösen, ist die Knoten mit Hilfe von hierarchischen Clusteringalgorithmen anzuordnen und die resul-tierende Hierarchie für nachfolgende Heuristiken zu verwenden, welche die Ringe finden. Vorhergehende Ansätze für vergleichbare Netzwerkdesign-Probleme haben die inhärente Netzwerkstruktur nicht auf solche Weise genützt und eher Greedy-Heuristiken eingesetzt.
Um gültige Ringe zu finden, wurden drei Heuristiken implementiert. Strategisches Variieren der erlaubten Ringgröße hilft der ersten Heuristik Ringe unter Benützung der Cluster-Hierarchie zu finden. Die zweite Heuristik baut auf den in der vorherigen Schicht gefundenen Ringen auf, indem sie nach gültigen Pfaden sucht, die an diese Ringe angeschlossen werden können. Drittens wird eine Reparaturheuristik angewendet, welche versucht verbleibende Knoten zu bestehenden Ringen zuzuweisen.
Zuletzt werden lokale Suchverfahren eingesetzt, um die Gesamtkosten zu verbessern. Um zu überprüfen, wie gut dieser Lösungsansatz funktioniert, wurden zwei Testinstanz-Generatoren implementiert. Der Erste generiert Instanzen zufallsbasiert, der Zweite baut auf dem bekannten TSPLIB-Archiv auf.
Die Evaluierung der zufallsbasierten Testinstanzen hat gezeigt, dass alle drei Heuristiken sämtliche Instanzen lösen konnten, wobei Girvan-Newman und Kernighan-Lin in jedem Testlauf Lösungen gefunden haben, war dies bei K-means nicht der Fall. Mit Kernighan-Lin konnte im Durchschnitt schneller eine Lösung gefunden werden, aber die Gesamtkosten waren bei den beiden anderen Algorithmen etwas besser. Mit den TSPLIB-basierten Testinstanzen konnte nicht mit allen Clusteringalgorithmen eine Lösung erzielt werden, aber zumindest war für jede Testinstanz mindestens ein Clustering-Verfahren erfolgreich.";;"none extracted value";"0,00";"0,00"
"TUW-202824";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-202824.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-202824-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-202824-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-203409";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-203409.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-203409-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-203409-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-203924";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-203924.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-203924-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-203924-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-204724";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-204724.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-204724-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-204724-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-205557";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-205557.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-205557-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-205557-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-205933";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-205933.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-205933-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-205933-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-213513";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-213513.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-213513-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-213513-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-216744";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-216744.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-216744-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-216744-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-217690";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-217690.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-217690-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-217690-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-217971";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-217971.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-217971-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-217971-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-221215";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-221215.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-221215-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-221215-xstream.xml"")";"
Kurzfassung Beim Selective Graph Coloring Problem (SGCP) geht es darum, einen Teilgraphen mit spezieller Struktur zu finden, dessen chromatische Zahl so niedrig wie möglich ist. Der Ursprungsgraph ist in mehrere Cluster unterteilt, und von jedem Cluster muss der Teilgraph genau einen Knoten enthalten. Dieses Problem ist NP-schwer und wird daher meistens mit Heuristiken gelöst.

Ich habe mehrere Varianten eines Algorithmus implementiert, der Variable Neighborhood Search (VNS) benutzt, um den Lösungsraum zu durchsuchen, und dann die gefundene Lösung mit heuristischen oder exakten Methoden evaluiert. Jede Variante kann mit oder ohne ein Lösungsarchiv verwendet werden. Ein Lösungsarchiv ist eine Datenstruktur, in der bereits gefundene Lösungen gespeichert werden, so dass Duplikate nicht neu evaluiert werden müssen, sondern effizient zu neuen Lösungen konvertiert werden können. Um eine obere Schranke zu errechnen, wurde eine Variante von Greedy Coloring verwendet. Eine weitere Variante des Algorithmus zählt auch die Anzahl der Konflikte, die entstünden, würde eine Farbe weniger verwendet werden. Schließlich wurden zwei Methoden umgesetzt, um eine untere Schranke zu berechnen: maximale Clique und lineare Programmierung mit Spaltengenerierung.

Das Programm wurde mit verschiedenen Instanzen aus der Literatur getestet. Mein Algorithmus beendete die Berechnungen oft schon nach sehr kurzer Laufzeit, führte aber im Allgemeinen zu geringfügig schlechteren Ergebnissen.";;"none extracted value";"0,00";"0,00"
"TUW-223906";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-223906.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-223906-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-223906-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-223973";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-223973.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-223973-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-223973-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-225252";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-225252.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-225252-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-225252-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-226000";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-226000.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-226000-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-226000-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-226016";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-226016.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-226016-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-226016-xstream.xml"")";"Invariant generiert ist ein kritische Problem für Programmen mit Schleife zum Beweisen der Eigenschaften, inclusive die Richtigkeit. Die problem wird schwerer bei hohe Anzhal des Quantoren in die geprüfte Eigenschaft. In diese arbeit wir studiere diese Problem und versuchen combinieren verschieden Methoden für schwarer invariants zu beweisen.";;"none extracted value";"0,00";"0,00"
"TUW-228620";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-228620.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-228620-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-228620-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-231707";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-231707.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-231707-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-231707-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-233317";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-233317.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-233317-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-233317-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-233657";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-233657.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-233657-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-233657-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-236063";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-236063.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-236063-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-236063-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-236120";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-236120.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-236120-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-236120-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-237297";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-237297.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-237297-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-237297-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-240858";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-240858.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-240858-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-240858-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-245336";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-245336.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-245336-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-245336-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-245799";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-245799.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-245799-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-245799-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-247301";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-247301.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-247301-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-247301-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-247741";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-247741.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-247741-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-247741-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-247743";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-247743.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-247743-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-247743-xstream.xml"")";"Die Selbstorganisierende Karte (SOM) ist ein nützliches und starkesWerkzeug für die Datenanalyse, besonders für groÿe Datensätze oder Datensätze von hoher Dimensionalität. SOM Visualisierungen bilden die Dimensionen des Datenmodells auf graphische Dimensionen wie Farbe und Position ab, so helfen sie der Navigation und dem Erforschen von dem SOM. SOM Visualisierungen können auch die Daten selbst einbeziehen, so dass der Zugriff auf Informationen möglich wird, die in einem reinen SOM nicht verfügbar sind. Dadurch wird ein tieferer Einblick in die Daten möglich. Wenn die Daten mit klassen gekennzeichnet sind, können diese Klassen auch in der Visualisierung einbezogen werden, so dass, eine klarere Idee über die Klassinformation gewonnen wird. In dieser Arbeit schlagen wir eine neuartige SOM Visualisierungsmethode, nämlich die SOM Klassenfärbung vor, welche auf den Datenklassen beruht. Diese Methode findet eine farbige Partition des SOM-Gitters, die die Klassenstruktur widerspiegelt. Diese Visualisierung ermöglicht das entdecken von Klassinformation wie Klassenstruktur, Klassenverteilung und Klassenclusters. Auÿerdem können neue Daten Klassen zugeordnet werden und zwar indem der Punkt auf dem SOM-Gitter ermittelt wird, welcher das neue Datum (Messwert) am besten repräsentiert; das neue Datum wird dann jener Klasse zugeordnet, die die Partition repräsentiert, auf der sich der Punkt befindet.";;"none extracted value";"0,00";"0,00"
"TUW-251544";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-251544.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-251544-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-251544-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-252847";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-252847.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-252847-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-252847-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-255712";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-255712.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-255712-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-255712-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-256654";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-256654.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-256654-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-256654-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-257397";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-257397.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-257397-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-257397-xstream.xml"")";;;"none extracted value";"none expected";"NA"
"TUW-257870";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\groundtruth\TUW-257870.pdf"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\result\result-TUW-257870-xstream.xml"")";"=HYPERLINK(""D:\Java\git\MethodDemosGit\MethodDemos\output\extracted\grobid\grobid-TUW-257870-xstream.xml"")";;;"none extracted value";"none expected";"NA"
